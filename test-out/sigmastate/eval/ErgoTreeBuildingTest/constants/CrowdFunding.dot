digraph "CrowdFunding" {
concentrate=true
node [style=filled, fillcolor=orangered]

"s28" [
label="s28: TestSigmaDslBuilder = TestSigmaDslBuilderCtor()"
shape=box, color=green, tooltip="s28:TestSigmaDslBuilder", style=filled, fillcolor=white
]
"s5861" [
label="s5861: WECPoint = ECPoint(75ecd9,4ae797,...)"
shape=box, color=gray, tooltip="s5861:WECPoint", style=filled, fillcolor=white
]
"s5865" [
label="s5865: ProveDlogEvidence = ProveDlogEvidenceCtor(s5861)"
shape=box, color=green, tooltip="s5865:ProveDlogEvidence", style=filled, fillcolor=white
]
"s3" [
label="s3: ColOverArrayBuilder = ColOverArrayBuilderCtor()"
shape=box, color=green, tooltip="s3:ColOverArrayBuilder", style=filled, fillcolor=white
]
"s5922" [
label="s5922: Long = Const(1000l)"
shape=box, color=gray, tooltip="s5922:Long", style=filled, fillcolor=white
]
"s5903" [
label="s5903: WECPoint = ECPoint(47c732,3e8d9f,...)"
shape=box, color=gray, tooltip="s5903:WECPoint", style=filled, fillcolor=white
]
"s5907" [
label="s5907: ProveDlogEvidence = ProveDlogEvidenceCtor(s5903)"
shape=box, color=green, tooltip="s5907:ProveDlogEvidence", style=filled, fillcolor=white
]
"s6150" [
label="s6150: Col[Byte] = s5907.SigmaProp.propBytes()"
shape=box, color=darkblue, tooltip="s6150:Col[Byte]", style=filled, fillcolor=white
]
subgraph cluster_s6245 {
style=dashed; color="#FFCCFF"
"s6243" [
label="s6243: Box"
shape=oval, color=gray, tooltip="s6243:Box", style=filled, fillcolor=white
]
"s6245" [
label="s6245: Box => Boolean = s6243 => s6263 && { s6268 }"
shape=box, color=magenta, tooltip="s6245:Box => Boolean", style=filled, fillcolor=white
]
{rank=source; s6243}
"s6253" [
label="s6253: Long = s6243.Box.value()"
shape=box, color=darkblue, tooltip="s6253:Long", style=filled, fillcolor=white
]
"s6263" [
label="s6263: Boolean = s6253 >= s5922"
shape=box, color=gray, tooltip="s6263:Boolean", style=filled, fillcolor=white
]
subgraph cluster_s6268 {
style=dashed; color="#FFCCCC"
"s6268" [
label="s6268: Thunk[Boolean] = Thunk(s6312, [s6270,s6312])"
shape=box, color=red, tooltip="s6268:Thunk[Boolean]", style=filled, fillcolor=white
]
"s6270" [
label="s6270: Col[Byte] = s6243.Box.propositionBytes()"
shape=box, color=darkblue, tooltip="s6270:Col[Byte]", style=filled, fillcolor=white
]
"s6312" [
label="s6312: Boolean = s6270 == s6150"
shape=box, color=gray, tooltip="s6312:Boolean", style=filled, fillcolor=white
]
{rank=sink; s6268}
}
{rank=sink; s6245}
}
"s5837" [
label="s5837: Long = Const(100l)"
shape=box, color=gray, tooltip="s5837:Long", style=filled, fillcolor=white
]
subgraph cluster_s6810 {
style=dashed; color="#FFCCFF"
"s6808" [
label="s6808: Context"
shape=oval, color=gray, tooltip="s6808:Context", style=filled, fillcolor=white
]
"s6810" [
label="s6810: Context => SigmaProp = s6808 => s6869.SigmaProp.||(s7775)"
shape=box, color=magenta, tooltip="s6810:Context => SigmaProp", style=filled, fillcolor=white
]
{rank=source; s6808}
"s6819" [
label="s6819: Long = s6808.Context.HEIGHT()"
shape=box, color=darkblue, tooltip="s6819:Long", style=filled, fillcolor=white
]
"s6827" [
label="s6827: Boolean = s6819 >= s5837"
shape=box, color=gray, tooltip="s6827:Boolean", style=filled, fillcolor=white
]
"s6867" [
label="s6867: TrivialSigma = TrivialSigmaCtor(s6827)"
shape=box, color=green, tooltip="s6867:TrivialSigma", style=filled, fillcolor=white
]
"s6869" [
label="s6869: SigmaProp = s6867.SigmaProp.&&(s5865)"
shape=box, color=darkblue, tooltip="s6869:SigmaProp", style=filled, fillcolor=white
]
"s6937" [
label="s6937: Boolean = s6819 < s5837"
shape=box, color=gray, tooltip="s6937:Boolean", style=filled, fillcolor=white
]
"s6961" [
label="s6961: Col[Box] = s6808.Context.OUTPUTS()"
shape=box, color=darkblue, tooltip="s6961:Col[Box]", style=filled, fillcolor=white
]
"s7742" [
label="s7742: Boolean = s6961.Col.exists(s6245)"
shape=box, color=darkblue, tooltip="s7742:Boolean", style=filled, fillcolor=white
]
"s7771" [
label="s7771: Col[Boolean] =\ls3.ColBuilder.fromItems(ArrayBuffer(s6937, s7742), anon$4<Boolean>)\l"
shape=box, color=darkblue, tooltip="s7771:Col[Boolean]", style=filled, fillcolor=white
]
"s7772" [
label="s7772: Boolean = s28.SigmaDslBuilder.allOf(s7771)"
shape=box, color=darkblue, tooltip="s7772:Boolean", style=filled, fillcolor=white
]
"s7773" [
label="s7773: TrivialSigma = TrivialSigmaCtor(s7772)"
shape=box, color=green, tooltip="s7773:TrivialSigma", style=filled, fillcolor=white
]
"s7775" [
label="s7775: SigmaProp = s7773.SigmaProp.&&(s5907)"
shape=box, color=darkblue, tooltip="s7775:SigmaProp", style=filled, fillcolor=white
]
{rank=sink; s6810}
}
"s1468" [
label="s1468: CostModel = s28.SigmaDslBuilder.CostModel()"
shape=box, color=darkblue, tooltip="s1468:CostModel", style=filled, fillcolor=white
]
"s2222" [
label="s2222: Int = s1468.CostModel.SelectField()"
shape=box, color=darkblue, tooltip="s2222:Int", style=filled, fillcolor=white
]
"s85" [
label="s85: Int = CostOf(Const:() => SLong)"
shape=box, color=gray, tooltip="s85:Int", style=filled, fillcolor=white
]
"s2233" [
label="s2233: Int = s2222 + s85"
shape=box, color=gray, tooltip="s2233:Int", style=filled, fillcolor=white
]
"s5867" [
label="s5867: Int = CostOf(ProveDlogEval:(SUnit) => SSigmaProp)"
shape=box, color=gray, tooltip="s5867:Int", style=filled, fillcolor=white
]
"s5871" [
label="s5871: Int = CostOf(SigmaPropIsValid:(SSigmaProp) => SBoolean)"
shape=box, color=gray, tooltip="s5871:Int", style=filled, fillcolor=white
]
"s5872" [
label="s5872: Int = s5867 + s5871"
shape=box, color=gray, tooltip="s5872:Int", style=filled, fillcolor=white
]
"s5881" [
label="s5881: Int = s2233 + s5872"
shape=box, color=gray, tooltip="s5881:Int", style=filled, fillcolor=white
]
"s1121" [
label="s1121: Int = CostOf(BinAnd:(SBoolean,SBoolean) => SBoolean)"
shape=box, color=gray, tooltip="s1121:Int", style=filled, fillcolor=white
]
"s5883" [
label="s5883: Int = s5881 + s1121"
shape=box, color=gray, tooltip="s5883:Int", style=filled, fillcolor=white
]
"s1470" [
label="s1470: Int = s1468.CostModel.AccessBox()"
shape=box, color=darkblue, tooltip="s1470:Int", style=filled, fillcolor=white
]
"s6788" [
label="s6788: Int = CostOf(AND_per_item:(Col[SBoolean]) => SBoolean)"
shape=box, color=gray, tooltip="s6788:Int", style=filled, fillcolor=white
]
"s11" [
label="s11: Int = Const(0)"
shape=box, color=gray, tooltip="s11:Int", style=filled, fillcolor=white
]
"s12" [
label="s12: IntPlusMonoid[Int] = IntPlusMonoidCtor(s11)"
shape=box, color=green, tooltip="s12:IntPlusMonoid[Int]", style=filled, fillcolor=white
]
"s880" [
label="s880: Int = CostOf(BinOr:(SBoolean,SBoolean) => SBoolean)"
shape=box, color=gray, tooltip="s880:Int", style=filled, fillcolor=white
]
"s2772" [
label="s2772: Int = CostOf(ExtractAmount:(SBox) => SLong)"
shape=box, color=gray, tooltip="s2772:Int", style=filled, fillcolor=white
]
"s6014" [
label="s6014: Int = s2772 + s85"
shape=box, color=gray, tooltip="s6014:Int", style=filled, fillcolor=white
]
"s6130" [
label="s6130: Int = CostOf(ExtractScriptBytes:(SBox) => Col[SByte])"
shape=box, color=gray, tooltip="s6130:Int", style=filled, fillcolor=white
]
"s6151" [
label="s6151: Int = CostOf(SigmaPropBytes:(SSigmaProp) => Col[SByte])"
shape=box, color=gray, tooltip="s6151:Int", style=filled, fillcolor=white
]
"s6152" [
label="s6152: Int = s5867 + s6151"
shape=box, color=gray, tooltip="s6152:Int", style=filled, fillcolor=white
]
"s6197" [
label="s6197: Int = s6130 + s6152"
shape=box, color=gray, tooltip="s6197:Int", style=filled, fillcolor=white
]
"s5901" [
label="s5901: Long = TypeSize(SByte)"
shape=box, color=gray, tooltip="s5901:Long", style=filled, fillcolor=white
]
"s6129" [
label="s6129: Int = Const(65536)"
shape=box, color=gray, tooltip="s6129:Int", style=filled, fillcolor=white
]
"s6210" [
label="s6210: Long = ToLong s6129"
shape=box, color=gray, tooltip="s6210:Long", style=filled, fillcolor=white
]
"s6211" [
label="s6211: Long = s5901 * s6210"
shape=box, color=gray, tooltip="s6211:Long", style=filled, fillcolor=white
]
"s6155" [
label="s6155: Int = s6150.Col.length()"
shape=box, color=darkblue, tooltip="s6155:Int", style=filled, fillcolor=white
]
"s6156" [
label="s6156: Long = ToLong s6155"
shape=box, color=gray, tooltip="s6156:Long", style=filled, fillcolor=white
]
"s6157" [
label="s6157: Long = s5901 * s6156"
shape=box, color=gray, tooltip="s6157:Long", style=filled, fillcolor=white
]
"s6226" [
label="s6226: Long = s6211 + s6157"
shape=box, color=gray, tooltip="s6226:Long", style=filled, fillcolor=white
]
"s6227" [
label="s6227: Long = Const(1024l)"
shape=box, color=gray, tooltip="s6227:Long", style=filled, fillcolor=white
]
"s6228" [
label="s6228: Long = s6226 / s6227"
shape=box, color=gray, tooltip="s6228:Long", style=filled, fillcolor=white
]
"s6229" [
label="s6229: Int = s6228.toInt"
shape=box, color=gray, tooltip="s6229:Int", style=filled, fillcolor=white
]
"s6230" [
label="s6230: Int = CostOf(EQ_per_kb:(T,T) => SBoolean)"
shape=box, color=gray, tooltip="s6230:Int", style=filled, fillcolor=white
]
"s6231" [
label="s6231: Int = s6229 * s6230"
shape=box, color=gray, tooltip="s6231:Int", style=filled, fillcolor=white
]
"s6232" [
label="s6232: Int = s6197 + s6231"
shape=box, color=gray, tooltip="s6232:Int", style=filled, fillcolor=white
]
"s6236" [
label="s6236: Int = s6014 + s6232"
shape=box, color=gray, tooltip="s6236:Int", style=filled, fillcolor=white
]
"s6238" [
label="s6238: Int = s6236 + s1121"
shape=box, color=gray, tooltip="s6238:Int", style=filled, fillcolor=white
]
"s1484" [
label="s1484: Int = s1468.CostModel.CollectionConst()"
shape=box, color=darkblue, tooltip="s1484:Int", style=filled, fillcolor=white
]
subgraph cluster_s7804 {
style=dashed; color="#FFCCFF"
"s7802" [
label="s7802: Context"
shape=oval, color=gray, tooltip="s7802:Context", style=filled, fillcolor=white
]
"s7804" [
label="s7804: Context => Int = s7802 => s8786 + s880"
shape=box, color=magenta, tooltip="s7804:Context => Int", style=filled, fillcolor=white
]
{rank=source; s7802}
"s7951" [
label="s7951: Col[Box] = s7802.Context.OUTPUTS()"
shape=box, color=darkblue, tooltip="s7951:Col[Box]", style=filled, fillcolor=white
]
"s7953" [
label="s7953: Int = s7951.Col.length()"
shape=box, color=darkblue, tooltip="s7953:Int", style=filled, fillcolor=white
]
"s8745" [
label="s8745: Int = s1470 * s7953"
shape=box, color=gray, tooltip="s8745:Int", style=filled, fillcolor=white
]
"s8746" [
label="s8746: Int = s1484 + s8745"
shape=box, color=gray, tooltip="s8746:Int", style=filled, fillcolor=white
]
"s8753" [
label="s8753: Int = s6238 * s7953"
shape=box, color=gray, tooltip="s8753:Int", style=filled, fillcolor=white
]
"s8754" [
label="s8754: Int = s8746 + s8753"
shape=box, color=gray, tooltip="s8754:Int", style=filled, fillcolor=white
]
"s8768" [
label="s8768: Col[Int] =\ls3.ColBuilder.fromItems(Vector(s2233, s5872, s8754), anon$7<Int>)\l"
shape=box, color=darkblue, tooltip="s8768:Col[Int]", style=filled, fillcolor=white
]
"s8770" [
label="s8770: Int = s8768.Col.sum(s12)"
shape=box, color=darkblue, tooltip="s8770:Int", style=filled, fillcolor=white
]
"s8772" [
label="s8772: Int = s8768.Col.length()"
shape=box, color=darkblue, tooltip="s8772:Int", style=filled, fillcolor=white
]
"s8774" [
label="s8774: Int = s6788 * s8772"
shape=box, color=gray, tooltip="s8774:Int", style=filled, fillcolor=white
]
"s8775" [
label="s8775: Int = s8770 + s8774"
shape=box, color=gray, tooltip="s8775:Int", style=filled, fillcolor=white
]
"s8786" [
label="s8786: Int = s5883 + s8775"
shape=box, color=gray, tooltip="s8786:Int", style=filled, fillcolor=white
]
{rank=sink; s7804}
}
subgraph cluster_s378 {
style=dashed; color="#FFCCFF"
"s376" [
label="s376: Context"
shape=oval, color=gray, tooltip="s376:Context", style=filled, fillcolor=white
]
"s378" [
label="s378: Context => Long = s376 => TypeSize(SBoolean)"
shape=box, color=magenta, tooltip="s378:Context => Long", style=filled, fillcolor=white
]
{rank=source; s376}
{rank=sink; s378}
}
"s6229" -> "s6231" [style=solid]
"s6230" -> "s6231" [style=solid]
"s6808" -> "s6819" [style=solid]
"s6253" -> "s6263" [style=solid]
"s5922" -> "s6263" [style=solid]
"s2772" -> "s6014" [style=solid]
"s85" -> "s6014" [style=solid]
"s6014" -> "s6236" [style=solid]
"s6232" -> "s6236" [style=solid]
"s6312" -> "s6268" [style=solid]
"s5881" -> "s5883" [style=solid]
"s1121" -> "s5883" [style=solid]
"s3" -> "s7771" [style=solid]
"s6937" -> "s7771" [style=solid]
"s7742" -> "s7771" [style=solid]
"s6238" -> "s8753" [style=solid]
"s7953" -> "s8753" [style=solid]
"s8768" -> "s8770" [style=solid]
"s12" -> "s8770" [style=solid]
"s6243" -> "s6253" [style=solid]
"s1468" -> "s2222" [style=solid]
"s7773" -> "s7775" [style=solid]
"s5907" -> "s7775" [style=solid]
"s5901" -> "s6157" [style=solid]
"s6156" -> "s6157" [style=solid]
"s6788" -> "s8774" [style=solid]
"s8772" -> "s8774" [style=solid]
"s6155" -> "s6156" [style=solid]
"s6129" -> "s6210" [style=solid]
"s1468" -> "s1470" [style=solid]
"s6197" -> "s6232" [style=solid]
"s6231" -> "s6232" [style=solid]
"s1484" -> "s8746" [style=solid]
"s8745" -> "s8746" [style=solid]
"s3" -> "s8768" [style=solid]
"s2233" -> "s8768" [style=solid]
"s5872" -> "s8768" [style=solid]
"s8754" -> "s8768" [style=solid]
"s5861" -> "s5865" [style=solid]
"s6819" -> "s6827" [style=solid]
"s5837" -> "s6827" [style=solid]
"s5901" -> "s6211" [style=solid]
"s6210" -> "s6211" [style=solid]
"s8770" -> "s8775" [style=solid]
"s8774" -> "s8775" [style=solid]
"s5867" -> "s6152" [style=solid]
"s6151" -> "s6152" [style=solid]
"s6867" -> "s6869" [style=solid]
"s5865" -> "s6869" [style=solid]
"s5867" -> "s5872" [style=solid]
"s5871" -> "s5872" [style=solid]
"s6961" -> "s7742" [style=solid]
"s6245" -> "s7742" [style=solid]
"s7951" -> "s7953" [style=solid]
"s6226" -> "s6228" [style=solid]
"s6227" -> "s6228" [style=solid]
"s6270" -> "s6312" [style=solid]
"s6150" -> "s6312" [style=solid]
"s6228" -> "s6229" [style=solid]
"s11" -> "s12" [style=solid]
"s6819" -> "s6937" [style=solid]
"s5837" -> "s6937" [style=solid]
"s1470" -> "s8745" [style=solid]
"s7953" -> "s8745" [style=solid]
"s7802" -> "s7951" [style=solid]
"s6130" -> "s6197" [style=solid]
"s6152" -> "s6197" [style=solid]
"s6243" -> "s6270" [style=solid]
"s2233" -> "s5881" [style=solid]
"s5872" -> "s5881" [style=solid]
"s7772" -> "s7773" [style=solid]
"s8768" -> "s8772" [style=solid]
"s6236" -> "s6238" [style=solid]
"s1121" -> "s6238" [style=solid]
"s1468" -> "s1484" [style=solid]
"s6243" -> "s6245" [style=dashed, color=lightgray, weight=0]
"s6263" -> "s6245" [style=solid]
"s6268" -> "s6245" [style=solid]
"s5903" -> "s5907" [style=solid]
"s6827" -> "s6867" [style=solid]
"s376" -> "s378" [style=dashed, color=lightgray, weight=0]
"s7802" -> "s7804" [style=dashed, color=lightgray, weight=0]
"s8786" -> "s7804" [style=solid]
"s880" -> "s7804" [style=solid]
"s8746" -> "s8754" [style=solid]
"s8753" -> "s8754" [style=solid]
"s2222" -> "s2233" [style=solid]
"s85" -> "s2233" [style=solid]
"s5907" -> "s6150" [style=solid]
"s6211" -> "s6226" [style=solid]
"s6157" -> "s6226" [style=solid]
"s28" -> "s7772" [style=solid]
"s7771" -> "s7772" [style=solid]
"s6150" -> "s6155" [style=solid]
"s5883" -> "s8786" [style=solid]
"s8775" -> "s8786" [style=solid]
"s6808" -> "s6961" [style=solid]
"s6808" -> "s6810" [style=dashed, color=lightgray, weight=0]
"s6869" -> "s6810" [style=solid]
"s7775" -> "s6810" [style=solid]
"s28" -> "s1468" [style=solid]
}
