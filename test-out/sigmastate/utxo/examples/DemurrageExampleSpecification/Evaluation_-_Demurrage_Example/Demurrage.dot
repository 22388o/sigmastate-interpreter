digraph "Demurrage" {
concentrate=true
node [style=filled, fillcolor=orangered]

"s152" [
label="s152: Int = Const(2)"
shape=box, color=gray, tooltip="s152:Int", style=filled, fillcolor=white
]
"s28" [
label="s28: TestSigmaDslBuilder = TestSigmaDslBuilderCtor()"
shape=box, color=green, tooltip="s28:TestSigmaDslBuilder", style=filled, fillcolor=white
]
"s71" [
label="s71: Int = Const(3)"
shape=box, color=gray, tooltip="s71:Int", style=filled, fillcolor=white
]
"s3" [
label="s3: ColOverArrayBuilder = ColOverArrayBuilderCtor()"
shape=box, color=green, tooltip="s3:ColOverArrayBuilder", style=filled, fillcolor=white
]
"s438" [
label="s438: Byte = Const(127)"
shape=box, color=gray, tooltip="s438:Byte", style=filled, fillcolor=white
]
"s123" [
label="s123: Long = Const(100l)"
shape=box, color=gray, tooltip="s123:Long", style=filled, fillcolor=white
]
"s37" [
label="s37: WECPoint = ECPoint(46235b,2f5c48,...)"
shape=box, color=gray, tooltip="s37:WECPoint", style=filled, fillcolor=white
]
"s43" [
label="s43: ProveDlogEvidence = ProveDlogEvidenceCtor(s37)"
shape=box, color=green, tooltip="s43:ProveDlogEvidence", style=filled, fillcolor=white
]
"s15" [
label="s15: Long = Const(0l)"
shape=box, color=gray, tooltip="s15:Long", style=filled, fillcolor=white
]
subgraph cluster_s1112 {
style=dashed; color="#FFCCFF"
"s1110" [
label="s1110: Context"
shape=oval, color=gray, tooltip="s1110:Context", style=filled, fillcolor=white
]
"s1112" [
label="s1112: Context => SigmaProp = s1110 => s2171.SigmaProp.||(s43)"
shape=box, color=magenta, tooltip="s1112:Context => SigmaProp", style=filled, fillcolor=white
]
{rank=source; s1110}
"s1140" [
label="s1140: Long = s1110.Context.HEIGHT()"
shape=box, color=darkblue, tooltip="s1140:Long", style=filled, fillcolor=white
]
"s1144" [
label="s1144: Box = s1110.Context.SELF()"
shape=box, color=darkblue, tooltip="s1144:Box", style=filled, fillcolor=white
]
"s1154" [
label="s1154: WOption[{_1: Long; _2: Col[Byte]}] =\ls1144.Box.getReg(s71, StructElem<{_1: Long; _2: Col[Byte]}>)\l"
shape=box, color=darkblue, tooltip="s1154:WOption[{_1: Long; _2: Col[Byte]}]", style=filled, fillcolor=white
]
"s1186" [
label="s1186: {_1: Long; _2: Col[Byte]} = s1154.WOption.get()"
shape=box, color=darkblue, tooltip="s1186:{_1: Long; _2: Col[Byte]}", style=filled, fillcolor=white
]
"s1198" [
label="s1198: Long = s1186._1"
shape=box, color=gray, tooltip="s1198:Long", style=filled, fillcolor=white
]
"s1207" [
label="s1207: Long = s1198 + s123"
shape=box, color=gray, tooltip="s1207:Long", style=filled, fillcolor=white
]
"s1213" [
label="s1213: Boolean = s1140 >= s1207"
shape=box, color=gray, tooltip="s1213:Boolean", style=filled, fillcolor=white
]
"s1227" [
label="s1227: Long = s1144.Box.value()"
shape=box, color=darkblue, tooltip="s1227:Long", style=filled, fillcolor=white
]
"s1247" [
label="s1247: Col[Byte] = s1144.Box.bytes()"
shape=box, color=darkblue, tooltip="s1247:Col[Byte]", style=filled, fillcolor=white
]
"s1259" [
label="s1259: Int = s1247.Col.length()"
shape=box, color=darkblue, tooltip="s1259:Int", style=filled, fillcolor=white
]
"s1278" [
label="s1278: Int = s152 * s1259"
shape=box, color=gray, tooltip="s1278:Int", style=filled, fillcolor=white
]
"s1284" [
label="s1284: Long = Upcast(s1278, anon$8<Long>)"
shape=box, color=gray, tooltip="s1284:Long", style=filled, fillcolor=white
]
"s1361" [
label="s1361: Long = s1140 - s1198"
shape=box, color=gray, tooltip="s1361:Long", style=filled, fillcolor=white
]
"s1367" [
label="s1367: Long = s1284 * s1361"
shape=box, color=gray, tooltip="s1367:Long", style=filled, fillcolor=white
]
"s1373" [
label="s1373: Long = s1227 - s1367"
shape=box, color=gray, tooltip="s1373:Long", style=filled, fillcolor=white
]
"s1385" [
label="s1385: Boolean = s1373 <= s15"
shape=box, color=gray, tooltip="s1385:Boolean", style=filled, fillcolor=white
]
"s1389" [
label="s1389: Col[Boolean] =\ls3.ColBuilder.fromItems(Vector(s1213, s1385), anon$4<Boolean>)\l"
shape=box, color=darkblue, tooltip="s1389:Col[Boolean]", style=filled, fillcolor=white
]
"s1390" [
label="s1390: Boolean = s28.SigmaDslBuilder.allOf(s1389)"
shape=box, color=darkblue, tooltip="s1390:Boolean", style=filled, fillcolor=white
]
"s1493" [
label="s1493: Col[Box] = s1110.Context.OUTPUTS()"
shape=box, color=darkblue, tooltip="s1493:Col[Box]", style=filled, fillcolor=white
]
"s1520" [
label="s1520: WOption[Short] = s1110.Context.getVar(s438, anon$6<Short>)"
shape=box, color=darkblue, tooltip="s1520:WOption[Short]", style=filled, fillcolor=white
]
"s1552" [
label="s1552: Short = s1520.WOption.get()"
shape=box, color=darkblue, tooltip="s1552:Short", style=filled, fillcolor=white
]
"s1563" [
label="s1563: Int = Upcast(s1552, anon$7<Int>)"
shape=box, color=gray, tooltip="s1563:Int", style=filled, fillcolor=white
]
"s1571" [
label="s1571: Box = s1493.Col.apply(s1563)"
shape=box, color=darkblue, tooltip="s1571:Box", style=filled, fillcolor=white
]
"s1594" [
label="s1594: WOption[{_1: Long; _2: Col[Byte]}] =\ls1571.Box.getReg(s71, StructElem<{_1: Long; _2: Col[Byte]}>)\l"
shape=box, color=darkblue, tooltip="s1594:WOption[{_1: Long; _2: Col[Byte]}]", style=filled, fillcolor=white
]
"s1626" [
label="s1626: {_1: Long; _2: Col[Byte]} = s1594.WOption.get()"
shape=box, color=darkblue, tooltip="s1626:{_1: Long; _2: Col[Byte]}", style=filled, fillcolor=white
]
"s1638" [
label="s1638: Long = s1626._1"
shape=box, color=gray, tooltip="s1638:Long", style=filled, fillcolor=white
]
"s1652" [
label="s1652: Boolean = s1638 == s1140"
shape=box, color=gray, tooltip="s1652:Boolean", style=filled, fillcolor=white
]
"s1765" [
label="s1765: Long = s1571.Box.value()"
shape=box, color=darkblue, tooltip="s1765:Long", style=filled, fillcolor=white
]
"s1944" [
label="s1944: Boolean = s1765 >= s1373"
shape=box, color=gray, tooltip="s1944:Boolean", style=filled, fillcolor=white
]
"s2054" [
label="s2054: Col[Byte] = s1571.Box.propositionBytes()"
shape=box, color=darkblue, tooltip="s2054:Col[Byte]", style=filled, fillcolor=white
]
"s2075" [
label="s2075: Col[Byte] = s1144.Box.propositionBytes()"
shape=box, color=darkblue, tooltip="s2075:Col[Byte]", style=filled, fillcolor=white
]
"s2086" [
label="s2086: Boolean = s2054 == s2075"
shape=box, color=gray, tooltip="s2086:Boolean", style=filled, fillcolor=white
]
"s2153" [
label="s2153: Col[Boolean] =\ls3.ColBuilder.fromItems(Vector(s1213, s1652, s1944, s2086), anon$4<Boolean>)\l"
shape=box, color=darkblue, tooltip="s2153:Col[Boolean]", style=filled, fillcolor=white
]
"s2154" [
label="s2154: Boolean = s28.SigmaDslBuilder.allOf(s2153)"
shape=box, color=darkblue, tooltip="s2154:Boolean", style=filled, fillcolor=white
]
"s2169" [
label="s2169: Col[Boolean] =\ls3.ColBuilder.fromItems(ArrayBuffer(s1390, s2154), anon$4<Boolean>)\l"
shape=box, color=darkblue, tooltip="s2169:Col[Boolean]", style=filled, fillcolor=white
]
"s2170" [
label="s2170: Boolean = s28.SigmaDslBuilder.anyOf(s2169)"
shape=box, color=darkblue, tooltip="s2170:Boolean", style=filled, fillcolor=white
]
"s2171" [
label="s2171: TrivialSigma = TrivialSigmaCtor(s2170)"
shape=box, color=green, tooltip="s2171:TrivialSigma", style=filled, fillcolor=white
]
{rank=sink; s1112}
}
"s977" [
label="s977: Int = CostOf(ExtractScriptBytes:(SBox) => Col[SByte])"
shape=box, color=gray, tooltip="s977:Int", style=filled, fillcolor=white
]
"s54" [
label="s54: CostModel = s28.SigmaDslBuilder.CostModel()"
shape=box, color=darkblue, tooltip="s54:CostModel", style=filled, fillcolor=white
]
"s68" [
label="s68: Int = s54.CostModel.AccessBox()"
shape=box, color=darkblue, tooltip="s68:Int", style=filled, fillcolor=white
]
"s148" [
label="s148: Int = CostOf(ExtractAmount:(SBox) => SLong)"
shape=box, color=gray, tooltip="s148:Int", style=filled, fillcolor=white
]
"s149" [
label="s149: Int = s68 + s148"
shape=box, color=gray, tooltip="s149:Int", style=filled, fillcolor=white
]
"s153" [
label="s153: Int = CostOf(Const:() => SInt)"
shape=box, color=gray, tooltip="s153:Int", style=filled, fillcolor=white
]
"s168" [
label="s168: Int = CostOf(ExtractBytes:(SBox) => Col[SByte])"
shape=box, color=gray, tooltip="s168:Int", style=filled, fillcolor=white
]
"s169" [
label="s169: Int = s68 + s168"
shape=box, color=gray, tooltip="s169:Int", style=filled, fillcolor=white
]
"s194" [
label="s194: Int = CostOf(SizeOf:(Col[IV]) => SInt)"
shape=box, color=gray, tooltip="s194:Int", style=filled, fillcolor=white
]
"s195" [
label="s195: Int = s169 + s194"
shape=box, color=gray, tooltip="s195:Int", style=filled, fillcolor=white
]
"s199" [
label="s199: Int = s153 + s195"
shape=box, color=gray, tooltip="s199:Int", style=filled, fillcolor=white
]
"s200" [
label="s200: Int = CostOf(*:(SInt,SInt) => SInt)"
shape=box, color=gray, tooltip="s200:Int", style=filled, fillcolor=white
]
"s201" [
label="s201: Int = s199 + s200"
shape=box, color=gray, tooltip="s201:Int", style=filled, fillcolor=white
]
"s205" [
label="s205: Int = CostOf(Upcast:(T) => R)"
shape=box, color=gray, tooltip="s205:Int", style=filled, fillcolor=white
]
"s206" [
label="s206: Int = s201 + s205"
shape=box, color=gray, tooltip="s206:Int", style=filled, fillcolor=white
]
"s56" [
label="s56: Int = s54.CostModel.SelectField()"
shape=box, color=darkblue, tooltip="s56:Int", style=filled, fillcolor=white
]
"s120" [
label="s120: Int = Const(1)"
shape=box, color=gray, tooltip="s120:Int", style=filled, fillcolor=white
]
"s283" [
label="s283: Int = s56 + s120"
shape=box, color=gray, tooltip="s283:Int", style=filled, fillcolor=white
]
"s284" [
label="s284: Int = CostOf(-:(SLong,SLong) => SLong)"
shape=box, color=gray, tooltip="s284:Int", style=filled, fillcolor=white
]
"s285" [
label="s285: Int = s283 + s284"
shape=box, color=gray, tooltip="s285:Int", style=filled, fillcolor=white
]
"s289" [
label="s289: Int = s206 + s285"
shape=box, color=gray, tooltip="s289:Int", style=filled, fillcolor=white
]
"s290" [
label="s290: Int = CostOf(*:(SLong,SLong) => SLong)"
shape=box, color=gray, tooltip="s290:Int", style=filled, fillcolor=white
]
"s291" [
label="s291: Int = s289 + s290"
shape=box, color=gray, tooltip="s291:Int", style=filled, fillcolor=white
]
"s295" [
label="s295: Int = s149 + s291"
shape=box, color=gray, tooltip="s295:Int", style=filled, fillcolor=white
]
"s297" [
label="s297: Int = s295 + s284"
shape=box, color=gray, tooltip="s297:Int", style=filled, fillcolor=white
]
"s447" [
label="s447: Int = s54.CostModel.GetVar()"
shape=box, color=darkblue, tooltip="s447:Int", style=filled, fillcolor=white
]
"s484" [
label="s484: Int = s447 + s205"
shape=box, color=gray, tooltip="s484:Int", style=filled, fillcolor=white
]
"s124" [
label="s124: Int = CostOf(Const:() => SLong)"
shape=box, color=gray, tooltip="s124:Int", style=filled, fillcolor=white
]
"s128" [
label="s128: Int = s120 + s124"
shape=box, color=gray, tooltip="s128:Int", style=filled, fillcolor=white
]
"s129" [
label="s129: Int = CostOf(+:(SLong,SLong) => SLong)"
shape=box, color=gray, tooltip="s129:Int", style=filled, fillcolor=white
]
"s130" [
label="s130: Int = s128 + s129"
shape=box, color=gray, tooltip="s130:Int", style=filled, fillcolor=white
]
"s134" [
label="s134: Int = s56 + s130"
shape=box, color=gray, tooltip="s134:Int", style=filled, fillcolor=white
]
"s305" [
label="s305: Int = s297 + s124"
shape=box, color=gray, tooltip="s305:Int", style=filled, fillcolor=white
]
"s310" [
label="s310: Col[Int] =\ls3.ColBuilder.fromItems(Vector(s134, s305), anon$7<Int>)\l"
shape=box, color=darkblue, tooltip="s310:Col[Int]", style=filled, fillcolor=white
]
"s11" [
label="s11: Int = Const(0)"
shape=box, color=gray, tooltip="s11:Int", style=filled, fillcolor=white
]
"s12" [
label="s12: IntPlusMonoid[Int] = IntPlusMonoidCtor(s11)"
shape=box, color=green, tooltip="s12:IntPlusMonoid[Int]", style=filled, fillcolor=white
]
"s312" [
label="s312: Int = s310.Col.sum(s12)"
shape=box, color=darkblue, tooltip="s312:Int", style=filled, fillcolor=white
]
"s315" [
label="s315: Int = CostOf(AND_per_item:(Col[SBoolean]) => SBoolean)"
shape=box, color=gray, tooltip="s315:Int", style=filled, fillcolor=white
]
"s314" [
label="s314: Int = s310.Col.length()"
shape=box, color=darkblue, tooltip="s314:Int", style=filled, fillcolor=white
]
"s316" [
label="s316: Int = s315 * s314"
shape=box, color=gray, tooltip="s316:Int", style=filled, fillcolor=white
]
"s317" [
label="s317: Int = s312 + s316"
shape=box, color=gray, tooltip="s317:Int", style=filled, fillcolor=white
]
"s1103" [
label="s1103: Int = CostOf(OR_per_item:(Col[SBoolean]) => SBoolean)"
shape=box, color=gray, tooltip="s1103:Int", style=filled, fillcolor=white
]
"s572" [
label="s572: Int = s120 + s56"
shape=box, color=gray, tooltip="s572:Int", style=filled, fillcolor=white
]
"s172" [
label="s172: Long = TypeSize(SByte)"
shape=box, color=gray, tooltip="s172:Long", style=filled, fillcolor=white
]
"s167" [
label="s167: Int = Const(65536)"
shape=box, color=gray, tooltip="s167:Int", style=filled, fillcolor=white
]
"s1049" [
label="s1049: Long = ToLong s167"
shape=box, color=gray, tooltip="s1049:Long", style=filled, fillcolor=white
]
"s1050" [
label="s1050: Long = s172 * s1049"
shape=box, color=gray, tooltip="s1050:Long", style=filled, fillcolor=white
]
"s1065" [
label="s1065: Long = s1050 + s1050"
shape=box, color=gray, tooltip="s1065:Long", style=filled, fillcolor=white
]
"s1066" [
label="s1066: Long = Const(1024l)"
shape=box, color=gray, tooltip="s1066:Long", style=filled, fillcolor=white
]
"s1067" [
label="s1067: Long = s1065 / s1066"
shape=box, color=gray, tooltip="s1067:Long", style=filled, fillcolor=white
]
"s1068" [
label="s1068: Int = s1067.toInt"
shape=box, color=gray, tooltip="s1068:Int", style=filled, fillcolor=white
]
"s1069" [
label="s1069: Int = CostOf(EQ_per_kb:(T,T) => SBoolean)"
shape=box, color=gray, tooltip="s1069:Int", style=filled, fillcolor=white
]
"s1070" [
label="s1070: Int = s1068 * s1069"
shape=box, color=gray, tooltip="s1070:Int", style=filled, fillcolor=white
]
"s45" [
label="s45: Int = CostOf(ProveDlogEval:(SUnit) => SSigmaProp)"
shape=box, color=gray, tooltip="s45:Int", style=filled, fillcolor=white
]
"s49" [
label="s49: Int = CostOf(SigmaPropIsValid:(SSigmaProp) => SBoolean)"
shape=box, color=gray, tooltip="s49:Int", style=filled, fillcolor=white
]
"s50" [
label="s50: Int = s45 + s49"
shape=box, color=gray, tooltip="s50:Int", style=filled, fillcolor=white
]
"s999" [
label="s999: Int = s68 + s977"
shape=box, color=gray, tooltip="s999:Int", style=filled, fillcolor=white
]
"s432" [
label="s432: Int = s54.CostModel.CollectionConst()"
shape=box, color=darkblue, tooltip="s432:Int", style=filled, fillcolor=white
]
"s506" [
label="s506: Int = CostOf(ByIndex:[IV](Col[IV],SInt) => IV)"
shape=box, color=gray, tooltip="s506:Int", style=filled, fillcolor=white
]
subgraph cluster_s2189 {
style=dashed; color="#FFCCFF"
"s2187" [
label="s2187: Context"
shape=oval, color=gray, tooltip="s2187:Context", style=filled, fillcolor=white
]
"s2189" [
label="s2189: Context => Int = s2187 => s3251 + s3255"
shape=box, color=magenta, tooltip="s2189:Context => Int", style=filled, fillcolor=white
]
{rank=source; s2187}
"s2566" [
label="s2566: Col[Box] = s2187.Context.OUTPUTS()"
shape=box, color=darkblue, tooltip="s2566:Col[Box]", style=filled, fillcolor=white
]
"s2568" [
label="s2568: Int = s2566.Col.length()"
shape=box, color=darkblue, tooltip="s2568:Int", style=filled, fillcolor=white
]
"s2657" [
label="s2657: Int = s68 * s2568"
shape=box, color=gray, tooltip="s2657:Int", style=filled, fillcolor=white
]
"s2658" [
label="s2658: Int = s432 + s2657"
shape=box, color=gray, tooltip="s2658:Int", style=filled, fillcolor=white
]
"s2659" [
label="s2659: Int = s2658 + s484"
shape=box, color=gray, tooltip="s2659:Int", style=filled, fillcolor=white
]
"s2661" [
label="s2661: Int = s2659 + s506"
shape=box, color=gray, tooltip="s2661:Int", style=filled, fillcolor=white
]
"s2840" [
label="s2840: Int = s2661 + s148"
shape=box, color=gray, tooltip="s2840:Int", style=filled, fillcolor=white
]
"s3018" [
label="s3018: Int = s2840 + s297"
shape=box, color=gray, tooltip="s3018:Int", style=filled, fillcolor=white
]
"s3130" [
label="s3130: Int = s2661 + s977"
shape=box, color=gray, tooltip="s3130:Int", style=filled, fillcolor=white
]
"s3188" [
label="s3188: Int = s3130 + s999"
shape=box, color=gray, tooltip="s3188:Int", style=filled, fillcolor=white
]
"s3223" [
label="s3223: Int = s3188 + s1070"
shape=box, color=gray, tooltip="s3223:Int", style=filled, fillcolor=white
]
"s3228" [
label="s3228: Col[Int] =\ls3.ColBuilder.fromItems(Vector(s134, s572, s3018, s3223), anon$7<Int>)\l"
shape=box, color=darkblue, tooltip="s3228:Col[Int]", style=filled, fillcolor=white
]
"s3230" [
label="s3230: Int = s3228.Col.sum(s12)"
shape=box, color=darkblue, tooltip="s3230:Int", style=filled, fillcolor=white
]
"s3232" [
label="s3232: Int = s3228.Col.length()"
shape=box, color=darkblue, tooltip="s3232:Int", style=filled, fillcolor=white
]
"s3234" [
label="s3234: Int = s315 * s3232"
shape=box, color=gray, tooltip="s3234:Int", style=filled, fillcolor=white
]
"s3235" [
label="s3235: Int = s3230 + s3234"
shape=box, color=gray, tooltip="s3235:Int", style=filled, fillcolor=white
]
"s3249" [
label="s3249: Col[Int] =\ls3.ColBuilder.fromItems(Vector(s50, s317, s3235), anon$7<Int>)\l"
shape=box, color=darkblue, tooltip="s3249:Col[Int]", style=filled, fillcolor=white
]
"s3251" [
label="s3251: Int = s3249.Col.sum(s12)"
shape=box, color=darkblue, tooltip="s3251:Int", style=filled, fillcolor=white
]
"s3253" [
label="s3253: Int = s3249.Col.length()"
shape=box, color=darkblue, tooltip="s3253:Int", style=filled, fillcolor=white
]
"s3255" [
label="s3255: Int = s1103 * s3253"
shape=box, color=gray, tooltip="s3255:Int", style=filled, fillcolor=white
]
{rank=sink; s2189}
}
"s3259" [
label="s3259: (Context => SigmaProp, Context => Int) = (s1112, s2189)"
shape=box, color=gray, tooltip="s3259:(Context => SigmaProp, Context => Int)", style=filled, fillcolor=white
]
"s1067" -> "s1068" [style=solid]
"s3228" -> "s3230" [style=solid]
"s12" -> "s3230" [style=solid]
"s2658" -> "s2659" [style=solid]
"s484" -> "s2659" [style=solid]
"s54" -> "s56" [style=solid]
"s3249" -> "s3253" [style=solid]
"s3" -> "s3249" [style=solid]
"s50" -> "s3249" [style=solid]
"s317" -> "s3249" [style=solid]
"s3235" -> "s3249" [style=solid]
"s3" -> "s2169" [style=solid]
"s1390" -> "s2169" [style=solid]
"s2154" -> "s2169" [style=solid]
"s1144" -> "s1247" [style=solid]
"s206" -> "s289" [style=solid]
"s285" -> "s289" [style=solid]
"s315" -> "s316" [style=solid]
"s314" -> "s316" [style=solid]
"s1227" -> "s1373" [style=solid]
"s1367" -> "s1373" [style=solid]
"s28" -> "s2154" [style=solid]
"s2153" -> "s2154" [style=solid]
"s310" -> "s312" [style=solid]
"s12" -> "s312" [style=solid]
"s201" -> "s206" [style=solid]
"s205" -> "s206" [style=solid]
"s199" -> "s201" [style=solid]
"s200" -> "s201" [style=solid]
"s1065" -> "s1067" [style=solid]
"s1066" -> "s1067" [style=solid]
"s295" -> "s297" [style=solid]
"s284" -> "s297" [style=solid]
"s447" -> "s484" [style=solid]
"s205" -> "s484" [style=solid]
"s283" -> "s285" [style=solid]
"s284" -> "s285" [style=solid]
"s2661" -> "s2840" [style=solid]
"s148" -> "s2840" [style=solid]
"s1247" -> "s1259" [style=solid]
"s312" -> "s317" [style=solid]
"s316" -> "s317" [style=solid]
"s1144" -> "s1227" [style=solid]
"s68" -> "s169" [style=solid]
"s168" -> "s169" [style=solid]
"s2840" -> "s3018" [style=solid]
"s297" -> "s3018" [style=solid]
"s1110" -> "s1493" [style=solid]
"s1140" -> "s1361" [style=solid]
"s1198" -> "s1361" [style=solid]
"s1198" -> "s1207" [style=solid]
"s123" -> "s1207" [style=solid]
"s3" -> "s2153" [style=solid]
"s1213" -> "s2153" [style=solid]
"s1652" -> "s2153" [style=solid]
"s1944" -> "s2153" [style=solid]
"s2086" -> "s2153" [style=solid]
"s1520" -> "s1552" [style=solid]
"s172" -> "s1050" [style=solid]
"s1049" -> "s1050" [style=solid]
"s2187" -> "s2566" [style=solid]
"s56" -> "s134" [style=solid]
"s130" -> "s134" [style=solid]
"s120" -> "s128" [style=solid]
"s124" -> "s128" [style=solid]
"s1552" -> "s1563" [style=solid]
"s2187" -> "s2189" [style=dashed, color=lightgray, weight=0]
"s3251" -> "s2189" [style=solid]
"s3255" -> "s2189" [style=solid]
"s152" -> "s1278" [style=solid]
"s1259" -> "s1278" [style=solid]
"s2661" -> "s3130" [style=solid]
"s977" -> "s3130" [style=solid]
"s68" -> "s149" [style=solid]
"s148" -> "s149" [style=solid]
"s1144" -> "s1154" [style=solid]
"s71" -> "s1154" [style=solid]
"s315" -> "s3234" [style=solid]
"s3232" -> "s3234" [style=solid]
"s3" -> "s1389" [style=solid]
"s1213" -> "s1389" [style=solid]
"s1385" -> "s1389" [style=solid]
"s1103" -> "s3255" [style=solid]
"s3253" -> "s3255" [style=solid]
"s68" -> "s2657" [style=solid]
"s2568" -> "s2657" [style=solid]
"s1638" -> "s1652" [style=solid]
"s1140" -> "s1652" [style=solid]
"s2566" -> "s2568" [style=solid]
"s289" -> "s291" [style=solid]
"s290" -> "s291" [style=solid]
"s1110" -> "s1520" [style=solid]
"s438" -> "s1520" [style=solid]
"s3188" -> "s3223" [style=solid]
"s1070" -> "s3223" [style=solid]
"s11" -> "s12" [style=solid]
"s28" -> "s54" [style=solid]
"s120" -> "s572" [style=solid]
"s56" -> "s572" [style=solid]
"s1571" -> "s1765" [style=solid]
"s1626" -> "s1638" [style=solid]
"s3249" -> "s3251" [style=solid]
"s12" -> "s3251" [style=solid]
"s1110" -> "s1144" [style=solid]
"s1493" -> "s1571" [style=solid]
"s1563" -> "s1571" [style=solid]
"s1110" -> "s1112" [style=dashed, color=lightgray, weight=0]
"s2171" -> "s1112" [style=solid]
"s43" -> "s1112" [style=solid]
"s1144" -> "s2075" [style=solid]
"s1186" -> "s1198" [style=solid]
"s128" -> "s130" [style=solid]
"s129" -> "s130" [style=solid]
"s1571" -> "s1594" [style=solid]
"s71" -> "s1594" [style=solid]
"s2170" -> "s2171" [style=solid]
"s1140" -> "s1213" [style=solid]
"s1207" -> "s1213" [style=solid]
"s2054" -> "s2086" [style=solid]
"s2075" -> "s2086" [style=solid]
"s1594" -> "s1626" [style=solid]
"s1571" -> "s2054" [style=solid]
"s167" -> "s1049" [style=solid]
"s149" -> "s295" [style=solid]
"s291" -> "s295" [style=solid]
"s1068" -> "s1070" [style=solid]
"s1069" -> "s1070" [style=solid]
"s2659" -> "s2661" [style=solid]
"s506" -> "s2661" [style=solid]
"s3" -> "s3228" [style=solid]
"s134" -> "s3228" [style=solid]
"s572" -> "s3228" [style=solid]
"s3018" -> "s3228" [style=solid]
"s3223" -> "s3228" [style=solid]
"s3" -> "s310" [style=solid]
"s134" -> "s310" [style=solid]
"s305" -> "s310" [style=solid]
"s45" -> "s50" [style=solid]
"s49" -> "s50" [style=solid]
"s153" -> "s199" [style=solid]
"s195" -> "s199" [style=solid]
"s1154" -> "s1186" [style=solid]
"s1278" -> "s1284" [style=solid]
"s1110" -> "s1140" [style=solid]
"s310" -> "s314" [style=solid]
"s37" -> "s43" [style=solid]
"s3130" -> "s3188" [style=solid]
"s999" -> "s3188" [style=solid]
"s28" -> "s1390" [style=solid]
"s1389" -> "s1390" [style=solid]
"s432" -> "s2658" [style=solid]
"s2657" -> "s2658" [style=solid]
"s1373" -> "s1385" [style=solid]
"s15" -> "s1385" [style=solid]
"s3230" -> "s3235" [style=solid]
"s3234" -> "s3235" [style=solid]
"s68" -> "s999" [style=solid]
"s977" -> "s999" [style=solid]
"s54" -> "s447" [style=solid]
"s3228" -> "s3232" [style=solid]
"s54" -> "s432" [style=solid]
"s297" -> "s305" [style=solid]
"s124" -> "s305" [style=solid]
"s169" -> "s195" [style=solid]
"s194" -> "s195" [style=solid]
"s1050" -> "s1065" [style=solid]
"s1050" -> "s1065" [style=solid]
"s56" -> "s283" [style=solid]
"s120" -> "s283" [style=solid]
"s1112" -> "s3259" [style=solid]
"s2189" -> "s3259" [style=solid]
"s54" -> "s68" [style=solid]
"s1765" -> "s1944" [style=solid]
"s1373" -> "s1944" [style=solid]
"s1284" -> "s1367" [style=solid]
"s1361" -> "s1367" [style=solid]
"s28" -> "s2170" [style=solid]
"s2169" -> "s2170" [style=solid]
}
