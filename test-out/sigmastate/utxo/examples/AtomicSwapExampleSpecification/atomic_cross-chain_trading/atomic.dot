digraph "atomic" {
concentrate=true
node [style=filled, fillcolor=orangered]

"s106" [
label="s106: WECPoint = ECPoint(6e9d30,4cd89f,...)"
shape=box, color=gray, tooltip="s106:WECPoint", style=filled, fillcolor=white
]
"s110" [
label="s110: ProveDlogEvidence = ProveDlogEvidenceCtor(s106)"
shape=box, color=green, tooltip="s110:ProveDlogEvidence", style=filled, fillcolor=white
]
"s81" [
label="s81: WECPoint = ECPoint(78eeeb,6e5f3f,...)"
shape=box, color=gray, tooltip="s81:WECPoint", style=filled, fillcolor=white
]
"s85" [
label="s85: ProveDlogEvidence = ProveDlogEvidenceCtor(s81)"
shape=box, color=green, tooltip="s85:ProveDlogEvidence", style=filled, fillcolor=white
]
"s28" [
label="s28: TestSigmaDslBuilder = TestSigmaDslBuilderCtor()"
shape=box, color=green, tooltip="s28:TestSigmaDslBuilder", style=filled, fillcolor=white
]
"s3182" [
label="s3182: Long = Const(50000l)"
shape=box, color=gray, tooltip="s3182:Long", style=filled, fillcolor=white
]
"s3186" [
label="s3186: Long = Const(500l)"
shape=box, color=gray, tooltip="s3186:Long", style=filled, fillcolor=white
]
"s3190" [
label="s3190: Long = s3182 + s3186"
shape=box, color=gray, tooltip="s3190:Long", style=filled, fillcolor=white
]
"s3" [
label="s3: ColOverArrayBuilder = ColOverArrayBuilderCtor()"
shape=box, color=green, tooltip="s3:ColOverArrayBuilder", style=filled, fillcolor=white
]
"s10524" [
label="s10524: WArray[Byte] =\lWArrayConst(Array(125, 27, 18, 9, 1, 19, -7, 100, -107, 13, 107, -127, 13, -103, -81, 112, 52, -24, 20, 64, 16, -46, 13, -22, -64, 73, -74, -67, 35, 95, 55, -86), Liftable(anon$5<Byte>))\l"
shape=box, color=gray, tooltip="s10524:WArray[Byte]", style=filled, fillcolor=white
]
"s10525" [
label="s10525: Col[Byte] = s3.ColBuilder.fromArray(s10524)"
shape=box, color=darkblue, tooltip="s10525:Col[Byte]", style=filled, fillcolor=white
]
"s314" [
label="s314: Byte = Const(1)"
shape=box, color=gray, tooltip="s314:Byte", style=filled, fillcolor=white
]
"s3347" [
label="s3347: Int = Const(33)"
shape=box, color=gray, tooltip="s3347:Int", style=filled, fillcolor=white
]
subgraph cluster_s10645 {
style=dashed; color="#FFCCFF"
"s10643" [
label="s10643: Context"
shape=oval, color=gray, tooltip="s10643:Context", style=filled, fillcolor=white
]
"s10645" [
label="s10645: Context => SigmaProp = s10643 => s28.SigmaDslBuilder.anyZK(s11046)"
shape=box, color=magenta, tooltip="s10645:Context => SigmaProp", style=filled, fillcolor=white
]
{rank=source; s10643}
"s10654" [
label="s10654: Long = s10643.Context.HEIGHT()"
shape=box, color=darkblue, tooltip="s10654:Long", style=filled, fillcolor=white
]
"s10674" [
label="s10674: Boolean = s10654 > s3190"
shape=box, color=gray, tooltip="s10674:Boolean", style=filled, fillcolor=white
]
"s10713" [
label="s10713: TrivialSigma = TrivialSigmaCtor(s10674)"
shape=box, color=green, tooltip="s10713:TrivialSigma", style=filled, fillcolor=white
]
"s10715" [
label="s10715: SigmaProp = s10713.SigmaProp.&&(s110)"
shape=box, color=darkblue, tooltip="s10715:SigmaProp", style=filled, fillcolor=white
]
"s10741" [
label="s10741: WOption[Col[Byte]] = s10643.Context.getVar(s314, ColElem<Col[Byte]>)"
shape=box, color=darkblue, tooltip="s10741:WOption[Col[Byte]]", style=filled, fillcolor=white
]
"s10783" [
label="s10783: Col[Byte] = s10741.WOption.get()"
shape=box, color=darkblue, tooltip="s10783:Col[Byte]", style=filled, fillcolor=white
]
"s10791" [
label="s10791: Int = s10783.Col.length()"
shape=box, color=darkblue, tooltip="s10791:Int", style=filled, fillcolor=white
]
"s10830" [
label="s10830: Boolean = s10791 < s3347"
shape=box, color=gray, tooltip="s10830:Boolean", style=filled, fillcolor=white
]
"s10900" [
label="s10900: Col[Byte] = s28.SigmaDslBuilder.blake2b256(s10783)"
shape=box, color=darkblue, tooltip="s10900:Col[Byte]", style=filled, fillcolor=white
]
"s10956" [
label="s10956: Boolean = s10900 == s10525"
shape=box, color=gray, tooltip="s10956:Boolean", style=filled, fillcolor=white
]
"s11027" [
label="s11027: Col[Boolean] =\ls3.ColBuilder.fromItems(ArrayBuffer(s10830, s10956), anon$4<Boolean>)\l"
shape=box, color=darkblue, tooltip="s11027:Col[Boolean]", style=filled, fillcolor=white
]
"s11028" [
label="s11028: Boolean = s28.SigmaDslBuilder.allOf(s11027)"
shape=box, color=darkblue, tooltip="s11028:Boolean", style=filled, fillcolor=white
]
"s11029" [
label="s11029: TrivialSigma = TrivialSigmaCtor(s11028)"
shape=box, color=green, tooltip="s11029:TrivialSigma", style=filled, fillcolor=white
]
"s11031" [
label="s11031: SigmaProp = s11029.SigmaProp.&&(s85)"
shape=box, color=darkblue, tooltip="s11031:SigmaProp", style=filled, fillcolor=white
]
"s11046" [
label="s11046: Col[SigmaProp] =\ls3.ColBuilder.fromItems(ArrayBuffer(s10715, s11031), SigmaPropElem<SigmaProp>)\l"
shape=box, color=darkblue, tooltip="s11046:Col[SigmaProp]", style=filled, fillcolor=white
]
{rank=sink; s10645}
}
"s347" [
label="s347: Int = CostOf(Const:() => Col[IV])"
shape=box, color=gray, tooltip="s347:Int", style=filled, fillcolor=white
]
"s39" [
label="s39: CostModel = s28.SigmaDslBuilder.CostModel()"
shape=box, color=darkblue, tooltip="s39:CostModel", style=filled, fillcolor=white
]
"s323" [
label="s323: Int = s39.CostModel.GetVar()"
shape=box, color=darkblue, tooltip="s323:Int", style=filled, fillcolor=white
]
"s348" [
label="s348: Int = s323 + s347"
shape=box, color=gray, tooltip="s348:Int", style=filled, fillcolor=white
]
"s87" [
label="s87: Int = CostOf(ProveDlogEval:(SUnit) => SSigmaProp)"
shape=box, color=gray, tooltip="s87:Int", style=filled, fillcolor=white
]
"s91" [
label="s91: Int = CostOf(SigmaPropIsValid:(SSigmaProp) => SBoolean)"
shape=box, color=gray, tooltip="s91:Int", style=filled, fillcolor=white
]
"s92" [
label="s92: Int = s87 + s91"
shape=box, color=gray, tooltip="s92:Int", style=filled, fillcolor=white
]
"s412" [
label="s412: Int =\lCostOf(CalcBlake2b256_per_kb:(Col[SByte]) => Col[SByte])\l"
shape=box, color=gray, tooltip="s412:Int", style=filled, fillcolor=white
]
"s11" [
label="s11: Int = Const(0)"
shape=box, color=gray, tooltip="s11:Int", style=filled, fillcolor=white
]
"s12" [
label="s12: IntPlusMonoid[Int] = IntPlusMonoidCtor(s11)"
shape=box, color=green, tooltip="s12:IntPlusMonoid[Int]", style=filled, fillcolor=white
]
"s3343" [
label="s3343: Int = CostOf(SizeOf:(Col[IV]) => SInt)"
shape=box, color=gray, tooltip="s3343:Int", style=filled, fillcolor=white
]
"s3344" [
label="s3344: Int = s348 + s3343"
shape=box, color=gray, tooltip="s3344:Int", style=filled, fillcolor=white
]
"s3348" [
label="s3348: Int = CostOf(Const:() => SInt)"
shape=box, color=gray, tooltip="s3348:Int", style=filled, fillcolor=white
]
"s3352" [
label="s3352: Int = s3344 + s3348"
shape=box, color=gray, tooltip="s3352:Int", style=filled, fillcolor=white
]
"s345" [
label="s345: Long = TypeSize(SByte)"
shape=box, color=gray, tooltip="s345:Long", style=filled, fillcolor=white
]
"s41" [
label="s41: Int = s39.CostModel.SelectField()"
shape=box, color=darkblue, tooltip="s41:Int", style=filled, fillcolor=white
]
"s48" [
label="s48: Int = CostOf(Const:() => SLong)"
shape=box, color=gray, tooltip="s48:Int", style=filled, fillcolor=white
]
"s56" [
label="s56: Int = s48 + s48"
shape=box, color=gray, tooltip="s56:Int", style=filled, fillcolor=white
]
"s57" [
label="s57: Int = CostOf(+:(SLong,SLong) => SLong)"
shape=box, color=gray, tooltip="s57:Int", style=filled, fillcolor=white
]
"s58" [
label="s58: Int = s56 + s57"
shape=box, color=gray, tooltip="s58:Int", style=filled, fillcolor=white
]
"s62" [
label="s62: Int = s41 + s58"
shape=box, color=gray, tooltip="s62:Int", style=filled, fillcolor=white
]
"s101" [
label="s101: Int = s62 + s92"
shape=box, color=gray, tooltip="s101:Int", style=filled, fillcolor=white
]
"s102" [
label="s102: Int = CostOf(BinAnd:(SBoolean,SBoolean) => SBoolean)"
shape=box, color=gray, tooltip="s102:Int", style=filled, fillcolor=white
]
"s103" [
label="s103: Int = s101 + s102"
shape=box, color=gray, tooltip="s103:Int", style=filled, fillcolor=white
]
"s525" [
label="s525: Int = CostOf(OR_per_item:(Col[SBoolean]) => SBoolean)"
shape=box, color=gray, tooltip="s525:Int", style=filled, fillcolor=white
]
"s409" [
label="s409: Long = Const(1024l)"
shape=box, color=gray, tooltip="s409:Long", style=filled, fillcolor=white
]
"s415" [
label="s415: Int = Const(32)"
shape=box, color=gray, tooltip="s415:Int", style=filled, fillcolor=white
]
"s478" [
label="s478: Long = ToLong s415"
shape=box, color=gray, tooltip="s478:Long", style=filled, fillcolor=white
]
"s479" [
label="s479: Long = s345 * s478"
shape=box, color=gray, tooltip="s479:Long", style=filled, fillcolor=white
]
"s10530" [
label="s10530: Int = s10525.Col.length()"
shape=box, color=darkblue, tooltip="s10530:Int", style=filled, fillcolor=white
]
"s10593" [
label="s10593: Long = ToLong s10530"
shape=box, color=gray, tooltip="s10593:Long", style=filled, fillcolor=white
]
"s10594" [
label="s10594: Long = s345 * s10593"
shape=box, color=gray, tooltip="s10594:Long", style=filled, fillcolor=white
]
"s10595" [
label="s10595: Long = s479 + s10594"
shape=box, color=gray, tooltip="s10595:Long", style=filled, fillcolor=white
]
"s10597" [
label="s10597: Long = s10595 / s409"
shape=box, color=gray, tooltip="s10597:Long", style=filled, fillcolor=white
]
"s10598" [
label="s10598: Int = s10597.toInt"
shape=box, color=gray, tooltip="s10598:Int", style=filled, fillcolor=white
]
"s498" [
label="s498: Int = CostOf(EQ_per_kb:(T,T) => SBoolean)"
shape=box, color=gray, tooltip="s498:Int", style=filled, fillcolor=white
]
"s10600" [
label="s10600: Int = s10598 * s498"
shape=box, color=gray, tooltip="s10600:Int", style=filled, fillcolor=white
]
"s3560" [
label="s3560: Int = CostOf(AND_per_item:(Col[SBoolean]) => SBoolean)"
shape=box, color=gray, tooltip="s3560:Int", style=filled, fillcolor=white
]
subgraph cluster_s11063 {
style=dashed; color="#FFCCFF"
"s11061" [
label="s11061: Context"
shape=oval, color=gray, tooltip="s11061:Context", style=filled, fillcolor=white
]
"s11063" [
label="s11063: Context => Int = s11061 => s11470 + s11474"
shape=box, color=magenta, tooltip="s11063:Context => Int", style=filled, fillcolor=white
]
{rank=source; s11061}
"s11159" [
label="s11159: WOption[Col[Byte]] = s11061.Context.getVar(s314, ColElem<Col[Byte]>)"
shape=box, color=darkblue, tooltip="s11159:WOption[Col[Byte]]", style=filled, fillcolor=white
]
"s11201" [
label="s11201: Col[Byte] = s11159.WOption.get()"
shape=box, color=darkblue, tooltip="s11201:Col[Byte]", style=filled, fillcolor=white
]
"s11209" [
label="s11209: Int = s11201.Col.length()"
shape=box, color=darkblue, tooltip="s11209:Int", style=filled, fillcolor=white
]
"s11345" [
label="s11345: Long = ToLong s11209"
shape=box, color=gray, tooltip="s11345:Long", style=filled, fillcolor=white
]
"s11346" [
label="s11346: Long = s345 * s11345"
shape=box, color=gray, tooltip="s11346:Long", style=filled, fillcolor=white
]
"s11348" [
label="s11348: Long = s11346 / s409"
shape=box, color=gray, tooltip="s11348:Long", style=filled, fillcolor=white
]
"s11349" [
label="s11349: Int = s11348.toInt"
shape=box, color=gray, tooltip="s11349:Int", style=filled, fillcolor=white
]
"s11351" [
label="s11351: Int = s11349 * s412"
shape=box, color=gray, tooltip="s11351:Int", style=filled, fillcolor=white
]
"s11352" [
label="s11352: Int = s348 + s11351"
shape=box, color=gray, tooltip="s11352:Int", style=filled, fillcolor=white
]
"s11403" [
label="s11403: Int = s11352 + s347"
shape=box, color=gray, tooltip="s11403:Int", style=filled, fillcolor=white
]
"s11438" [
label="s11438: Int = s11403 + s10600"
shape=box, color=gray, tooltip="s11438:Int", style=filled, fillcolor=white
]
"s11452" [
label="s11452: Col[Int] =\ls3.ColBuilder.fromItems(Vector(s92, s3352, s11438), anon$7<Int>)\l"
shape=box, color=darkblue, tooltip="s11452:Col[Int]", style=filled, fillcolor=white
]
"s11454" [
label="s11454: Int = s11452.Col.sum(s12)"
shape=box, color=darkblue, tooltip="s11454:Int", style=filled, fillcolor=white
]
"s11456" [
label="s11456: Int = s11452.Col.length()"
shape=box, color=darkblue, tooltip="s11456:Int", style=filled, fillcolor=white
]
"s11458" [
label="s11458: Int = s3560 * s11456"
shape=box, color=gray, tooltip="s11458:Int", style=filled, fillcolor=white
]
"s11459" [
label="s11459: Int = s11454 + s11458"
shape=box, color=gray, tooltip="s11459:Int", style=filled, fillcolor=white
]
"s11468" [
label="s11468: Col[Int] =\ls3.ColBuilder.fromItems(Vector(s103, s11459), anon$7<Int>)\l"
shape=box, color=darkblue, tooltip="s11468:Col[Int]", style=filled, fillcolor=white
]
"s11470" [
label="s11470: Int = s11468.Col.sum(s12)"
shape=box, color=darkblue, tooltip="s11470:Int", style=filled, fillcolor=white
]
"s11472" [
label="s11472: Int = s11468.Col.length()"
shape=box, color=darkblue, tooltip="s11472:Int", style=filled, fillcolor=white
]
"s11474" [
label="s11474: Int = s525 * s11472"
shape=box, color=gray, tooltip="s11474:Int", style=filled, fillcolor=white
]
{rank=sink; s11063}
}
"s11478" [
label="s11478: (Context => SigmaProp, Context => Int) = (s10645, s11063)"
shape=box, color=gray, tooltip="s11478:(Context => SigmaProp, Context => Int)", style=filled, fillcolor=white
]
"s11468" -> "s11472" [style=solid]
"s62" -> "s101" [style=solid]
"s92" -> "s101" [style=solid]
"s345" -> "s479" [style=solid]
"s478" -> "s479" [style=solid]
"s348" -> "s11352" [style=solid]
"s11351" -> "s11352" [style=solid]
"s3" -> "s11468" [style=solid]
"s103" -> "s11468" [style=solid]
"s11459" -> "s11468" [style=solid]
"s48" -> "s56" [style=solid]
"s48" -> "s56" [style=solid]
"s11028" -> "s11029" [style=solid]
"s10713" -> "s10715" [style=solid]
"s110" -> "s10715" [style=solid]
"s345" -> "s10594" [style=solid]
"s10593" -> "s10594" [style=solid]
"s10525" -> "s10530" [style=solid]
"s106" -> "s110" [style=solid]
"s3560" -> "s11458" [style=solid]
"s11456" -> "s11458" [style=solid]
"s323" -> "s348" [style=solid]
"s347" -> "s348" [style=solid]
"s10645" -> "s11478" [style=solid]
"s11063" -> "s11478" [style=solid]
"s345" -> "s11346" [style=solid]
"s11345" -> "s11346" [style=solid]
"s11061" -> "s11159" [style=solid]
"s314" -> "s11159" [style=solid]
"s10530" -> "s10593" [style=solid]
"s81" -> "s85" [style=solid]
"s11452" -> "s11456" [style=solid]
"s10597" -> "s10598" [style=solid]
"s87" -> "s92" [style=solid]
"s91" -> "s92" [style=solid]
"s3" -> "s11452" [style=solid]
"s92" -> "s11452" [style=solid]
"s3352" -> "s11452" [style=solid]
"s11438" -> "s11452" [style=solid]
"s10783" -> "s10791" [style=solid]
"s10791" -> "s10830" [style=solid]
"s3347" -> "s10830" [style=solid]
"s11352" -> "s11403" [style=solid]
"s347" -> "s11403" [style=solid]
"s3" -> "s11046" [style=solid]
"s10715" -> "s11046" [style=solid]
"s11031" -> "s11046" [style=solid]
"s525" -> "s11474" [style=solid]
"s11472" -> "s11474" [style=solid]
"s39" -> "s41" [style=solid]
"s11029" -> "s11031" [style=solid]
"s85" -> "s11031" [style=solid]
"s10595" -> "s10597" [style=solid]
"s409" -> "s10597" [style=solid]
"s3182" -> "s3190" [style=solid]
"s3186" -> "s3190" [style=solid]
"s10741" -> "s10783" [style=solid]
"s11061" -> "s11063" [style=dashed, color=lightgray, weight=0]
"s11470" -> "s11063" [style=solid]
"s11474" -> "s11063" [style=solid]
"s11454" -> "s11459" [style=solid]
"s11458" -> "s11459" [style=solid]
"s3" -> "s10525" [style=solid]
"s10524" -> "s10525" [style=solid]
"s11" -> "s12" [style=solid]
"s11159" -> "s11201" [style=solid]
"s10643" -> "s10741" [style=solid]
"s314" -> "s10741" [style=solid]
"s3344" -> "s3352" [style=solid]
"s3348" -> "s3352" [style=solid]
"s28" -> "s39" [style=solid]
"s11403" -> "s11438" [style=solid]
"s10600" -> "s11438" [style=solid]
"s10643" -> "s10645" [style=dashed, color=lightgray, weight=0]
"s28" -> "s10645" [style=solid]
"s11046" -> "s10645" [style=solid]
"s11468" -> "s11470" [style=solid]
"s12" -> "s11470" [style=solid]
"s101" -> "s103" [style=solid]
"s102" -> "s103" [style=solid]
"s39" -> "s323" [style=solid]
"s11346" -> "s11348" [style=solid]
"s409" -> "s11348" [style=solid]
"s3" -> "s11027" [style=solid]
"s10830" -> "s11027" [style=solid]
"s10956" -> "s11027" [style=solid]
"s348" -> "s3344" [style=solid]
"s3343" -> "s3344" [style=solid]
"s11349" -> "s11351" [style=solid]
"s412" -> "s11351" [style=solid]
"s11348" -> "s11349" [style=solid]
"s10654" -> "s10674" [style=solid]
"s3190" -> "s10674" [style=solid]
"s479" -> "s10595" [style=solid]
"s10594" -> "s10595" [style=solid]
"s56" -> "s58" [style=solid]
"s57" -> "s58" [style=solid]
"s11452" -> "s11454" [style=solid]
"s12" -> "s11454" [style=solid]
"s415" -> "s478" [style=solid]
"s10598" -> "s10600" [style=solid]
"s498" -> "s10600" [style=solid]
"s10900" -> "s10956" [style=solid]
"s10525" -> "s10956" [style=solid]
"s11201" -> "s11209" [style=solid]
"s28" -> "s11028" [style=solid]
"s11027" -> "s11028" [style=solid]
"s10674" -> "s10713" [style=solid]
"s41" -> "s62" [style=solid]
"s58" -> "s62" [style=solid]
"s11209" -> "s11345" [style=solid]
"s28" -> "s10900" [style=solid]
"s10783" -> "s10900" [style=solid]
"s10643" -> "s10654" [style=solid]
}
