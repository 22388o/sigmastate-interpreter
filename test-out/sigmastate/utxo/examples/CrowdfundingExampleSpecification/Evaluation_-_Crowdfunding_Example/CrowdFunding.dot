digraph "CrowdFunding" {
concentrate=true
node [style=filled, fillcolor=orangered]

"s1182" [
label="s1182: Long = Const(1000l)"
shape=box, color=gray, tooltip="s1182:Long", style=filled, fillcolor=white
]
"s1091" [
label="s1091: WECPoint = ECPoint(28633f,6917f2,...)"
shape=box, color=gray, tooltip="s1091:WECPoint", style=filled, fillcolor=white
]
"s1095" [
label="s1095: ProveDlogEvidence = ProveDlogEvidenceCtor(s1091)"
shape=box, color=green, tooltip="s1095:ProveDlogEvidence", style=filled, fillcolor=white
]
"s1331" [
label="s1331: Col[Byte] = s1095.SigmaProp.propBytes()"
shape=box, color=darkblue, tooltip="s1331:Col[Byte]", style=filled, fillcolor=white
]
subgraph cluster_s1426 {
style=dashed; color="#FFCCFF"
"s1424" [
label="s1424: Box"
shape=oval, color=gray, tooltip="s1424:Box", style=filled, fillcolor=white
]
"s1426" [
label="s1426: Box => Boolean = s1424 => s1484 && { s1489 }"
shape=box, color=magenta, tooltip="s1426:Box => Boolean", style=filled, fillcolor=white
]
{rank=source; s1424}
"s1473" [
label="s1473: Long = s1424.Box.value()"
shape=box, color=darkblue, tooltip="s1473:Long", style=filled, fillcolor=white
]
"s1484" [
label="s1484: Boolean = s1473 >= s1182"
shape=box, color=gray, tooltip="s1484:Boolean", style=filled, fillcolor=white
]
subgraph cluster_s1489 {
style=dashed; color="#FFCCCC"
"s1489" [
label="s1489: Thunk[Boolean] = Thunk(s1533, [s1491,s1533])"
shape=box, color=red, tooltip="s1489:Thunk[Boolean]", style=filled, fillcolor=white
]
"s1491" [
label="s1491: Col[Byte] = s1424.Box.propositionBytes()"
shape=box, color=darkblue, tooltip="s1491:Col[Byte]", style=filled, fillcolor=white
]
"s1533" [
label="s1533: Boolean = s1491 == s1331"
shape=box, color=gray, tooltip="s1533:Boolean", style=filled, fillcolor=white
]
{rank=sink; s1489}
}
{rank=sink; s1426}
}
"s28" [
label="s28: TestSigmaDslBuilder = TestSigmaDslBuilderCtor()"
shape=box, color=green, tooltip="s28:TestSigmaDslBuilder", style=filled, fillcolor=white
]
"s3" [
label="s3: ColOverArrayBuilder = ColOverArrayBuilderCtor()"
shape=box, color=green, tooltip="s3:ColOverArrayBuilder", style=filled, fillcolor=white
]
"s71" [
label="s71: WECPoint = ECPoint(767e11,fb44e7,...)"
shape=box, color=gray, tooltip="s71:WECPoint", style=filled, fillcolor=white
]
"s75" [
label="s75: ProveDlogEvidence = ProveDlogEvidenceCtor(s71)"
shape=box, color=green, tooltip="s75:ProveDlogEvidence", style=filled, fillcolor=white
]
"s47" [
label="s47: Long = Const(100l)"
shape=box, color=gray, tooltip="s47:Long", style=filled, fillcolor=white
]
subgraph cluster_s2055 {
style=dashed; color="#FFCCFF"
"s2053" [
label="s2053: Context"
shape=oval, color=gray, tooltip="s2053:Context", style=filled, fillcolor=white
]
"s2055" [
label="s2055: Context => SigmaProp = s2053 => s2114.SigmaProp.||(s3083)"
shape=box, color=magenta, tooltip="s2055:Context => SigmaProp", style=filled, fillcolor=white
]
{rank=source; s2053}
"s2064" [
label="s2064: Long = s2053.Context.HEIGHT()"
shape=box, color=darkblue, tooltip="s2064:Long", style=filled, fillcolor=white
]
"s2072" [
label="s2072: Boolean = s2064 >= s47"
shape=box, color=gray, tooltip="s2072:Boolean", style=filled, fillcolor=white
]
"s2112" [
label="s2112: TrivialSigma = TrivialSigmaCtor(s2072)"
shape=box, color=green, tooltip="s2112:TrivialSigma", style=filled, fillcolor=white
]
"s2114" [
label="s2114: SigmaProp = s2112.SigmaProp.&&(s75)"
shape=box, color=darkblue, tooltip="s2114:SigmaProp", style=filled, fillcolor=white
]
"s2140" [
label="s2140: Boolean = s2064 < s47"
shape=box, color=gray, tooltip="s2140:Boolean", style=filled, fillcolor=white
]
"s2164" [
label="s2164: Col[Box] = s2053.Context.OUTPUTS()"
shape=box, color=darkblue, tooltip="s2164:Col[Box]", style=filled, fillcolor=white
]
"s3061" [
label="s3061: Col[Boolean] = s2164.Col.map(s1426)"
shape=box, color=darkblue, tooltip="s3061:Col[Boolean]", style=filled, fillcolor=white
]
"s3072" [
label="s3072: Boolean = s28.SigmaDslBuilder.anyOf(s3061)"
shape=box, color=darkblue, tooltip="s3072:Boolean", style=filled, fillcolor=white
]
"s3079" [
label="s3079: Col[Boolean] =\ls3.ColBuilder.fromItems(ArrayBuffer(s2140, s3072), anon$4<Boolean>)\l"
shape=box, color=darkblue, tooltip="s3079:Col[Boolean]", style=filled, fillcolor=white
]
"s3080" [
label="s3080: Boolean = s28.SigmaDslBuilder.allOf(s3079)"
shape=box, color=darkblue, tooltip="s3080:Boolean", style=filled, fillcolor=white
]
"s3081" [
label="s3081: TrivialSigma = TrivialSigmaCtor(s3080)"
shape=box, color=green, tooltip="s3081:TrivialSigma", style=filled, fillcolor=white
]
"s3083" [
label="s3083: SigmaProp = s3081.SigmaProp.&&(s1095)"
shape=box, color=darkblue, tooltip="s3083:SigmaProp", style=filled, fillcolor=white
]
{rank=sink; s2055}
}
"s1311" [
label="s1311: Int = CostOf(ExtractScriptBytes:(SBox) => Col[SByte])"
shape=box, color=gray, tooltip="s1311:Int", style=filled, fillcolor=white
]
"s92" [
label="s92: Int = CostOf(BinAnd:(SBoolean,SBoolean) => SBoolean)"
shape=box, color=gray, tooltip="s92:Int", style=filled, fillcolor=white
]
"s1178" [
label="s1178: Int = CostOf(ExtractAmount:(SBox) => SLong)"
shape=box, color=gray, tooltip="s1178:Int", style=filled, fillcolor=white
]
"s77" [
label="s77: Int = CostOf(ProveDlogEval:(SUnit) => SSigmaProp)"
shape=box, color=gray, tooltip="s77:Int", style=filled, fillcolor=white
]
"s1332" [
label="s1332: Int = CostOf(SigmaPropBytes:(SSigmaProp) => Col[SByte])"
shape=box, color=gray, tooltip="s1332:Int", style=filled, fillcolor=white
]
"s1333" [
label="s1333: Int = s77 + s1332"
shape=box, color=gray, tooltip="s1333:Int", style=filled, fillcolor=white
]
"s48" [
label="s48: Int = CostOf(Const:() => SLong)"
shape=box, color=gray, tooltip="s48:Int", style=filled, fillcolor=white
]
"s1315" [
label="s1315: Long = TypeSize(SByte)"
shape=box, color=gray, tooltip="s1315:Long", style=filled, fillcolor=white
]
"s1308" [
label="s1308: Int = Const(65536)"
shape=box, color=gray, tooltip="s1308:Int", style=filled, fillcolor=white
]
"s1391" [
label="s1391: Long = ToLong s1308"
shape=box, color=gray, tooltip="s1391:Long", style=filled, fillcolor=white
]
"s1392" [
label="s1392: Long = s1315 * s1391"
shape=box, color=gray, tooltip="s1392:Long", style=filled, fillcolor=white
]
"s1336" [
label="s1336: Int = s1331.Col.length()"
shape=box, color=darkblue, tooltip="s1336:Int", style=filled, fillcolor=white
]
"s1337" [
label="s1337: Long = ToLong s1336"
shape=box, color=gray, tooltip="s1337:Long", style=filled, fillcolor=white
]
"s1338" [
label="s1338: Long = s1315 * s1337"
shape=box, color=gray, tooltip="s1338:Long", style=filled, fillcolor=white
]
"s1407" [
label="s1407: Long = s1392 + s1338"
shape=box, color=gray, tooltip="s1407:Long", style=filled, fillcolor=white
]
"s1408" [
label="s1408: Long = Const(1024l)"
shape=box, color=gray, tooltip="s1408:Long", style=filled, fillcolor=white
]
"s1409" [
label="s1409: Long = s1407 / s1408"
shape=box, color=gray, tooltip="s1409:Long", style=filled, fillcolor=white
]
"s1410" [
label="s1410: Int = s1409.toInt"
shape=box, color=gray, tooltip="s1410:Int", style=filled, fillcolor=white
]
"s1411" [
label="s1411: Int = CostOf(EQ_per_kb:(T,T) => SBoolean)"
shape=box, color=gray, tooltip="s1411:Int", style=filled, fillcolor=white
]
"s1412" [
label="s1412: Int = s1410 * s1411"
shape=box, color=gray, tooltip="s1412:Int", style=filled, fillcolor=white
]
subgraph cluster_s1718 {
style=dashed; color="#FFCCFF"
"s1716" [
label="s1716: (Box, (Int, Long))"
shape=oval, color=gray, tooltip="s1716:(Box, (Int, Long))", style=filled, fillcolor=white
]
"s1718" [
label="s1718: (Box, (Int, Long)) => Int = s1716 => s1999 + s92"
shape=box, color=magenta, tooltip="s1718:(Box, (Int, Long)) => Int", style=filled, fillcolor=white
]
{rank=source; s1716}
"s1720" [
label="s1720: (Int, Long) = s1716._2"
shape=box, color=gray, tooltip="s1720:(Int, Long)", style=filled, fillcolor=white
]
"s1721" [
label="s1721: Int = s1720._1"
shape=box, color=gray, tooltip="s1721:Int", style=filled, fillcolor=white
]
"s1766" [
label="s1766: Int = s1721 + s1178"
shape=box, color=gray, tooltip="s1766:Int", style=filled, fillcolor=white
]
"s1775" [
label="s1775: Int = s1766 + s48"
shape=box, color=gray, tooltip="s1775:Int", style=filled, fillcolor=white
]
"s1893" [
label="s1893: Int = s1721 + s1311"
shape=box, color=gray, tooltip="s1893:Int", style=filled, fillcolor=white
]
"s1960" [
label="s1960: Int = s1893 + s1333"
shape=box, color=gray, tooltip="s1960:Int", style=filled, fillcolor=white
]
"s1995" [
label="s1995: Int = s1960 + s1412"
shape=box, color=gray, tooltip="s1995:Int", style=filled, fillcolor=white
]
"s1999" [
label="s1999: Int = s1775 + s1995"
shape=box, color=gray, tooltip="s1999:Int", style=filled, fillcolor=white
]
{rank=sink; s1718}
}
"s2035" [
label="s2035: Int = CostOf(AND_per_item:(Col[SBoolean]) => SBoolean)"
shape=box, color=gray, tooltip="s2035:Int", style=filled, fillcolor=white
]
"s39" [
label="s39: CostModel = s28.SigmaDslBuilder.CostModel()"
shape=box, color=darkblue, tooltip="s39:CostModel", style=filled, fillcolor=white
]
"s41" [
label="s41: Int = s39.CostModel.SelectField()"
shape=box, color=darkblue, tooltip="s41:Int", style=filled, fillcolor=white
]
"s52" [
label="s52: Int = s41 + s48"
shape=box, color=gray, tooltip="s52:Int", style=filled, fillcolor=white
]
"s81" [
label="s81: Int = CostOf(SigmaPropIsValid:(SSigmaProp) => SBoolean)"
shape=box, color=gray, tooltip="s81:Int", style=filled, fillcolor=white
]
"s82" [
label="s82: Int = s77 + s81"
shape=box, color=gray, tooltip="s82:Int", style=filled, fillcolor=white
]
"s91" [
label="s91: Int = s52 + s82"
shape=box, color=gray, tooltip="s91:Int", style=filled, fillcolor=white
]
"s93" [
label="s93: Int = s91 + s92"
shape=box, color=gray, tooltip="s93:Int", style=filled, fillcolor=white
]
"s2047" [
label="s2047: Int = CostOf(BinOr:(SBoolean,SBoolean) => SBoolean)"
shape=box, color=gray, tooltip="s2047:Int", style=filled, fillcolor=white
]
"s11" [
label="s11: Int = Const(0)"
shape=box, color=gray, tooltip="s11:Int", style=filled, fillcolor=white
]
"s12" [
label="s12: IntPlusMonoid[Int] = IntPlusMonoidCtor(s11)"
shape=box, color=green, tooltip="s12:IntPlusMonoid[Int]", style=filled, fillcolor=white
]
"s1112" [
label="s1112: Int = s39.CostModel.AccessBox()"
shape=box, color=darkblue, tooltip="s1112:Int", style=filled, fillcolor=white
]
subgraph cluster_s1120 {
style=dashed; color="#FFCCFF"
"s1118" [
label="s1118: Box"
shape=oval, color=gray, tooltip="s1118:Box", style=filled, fillcolor=white
]
"s1120" [
label="s1120: Box => Long = s1118 => s1118.Box.dataSize()"
shape=box, color=magenta, tooltip="s1120:Box => Long", style=filled, fillcolor=white
]
{rank=source; s1118}
{rank=sink; s1120}
}
subgraph cluster_s4080 {
style=dashed; color="#FFCCFF"
"s4078" [
label="s4078: Context"
shape=oval, color=gray, tooltip="s4078:Context", style=filled, fillcolor=white
]
"s4080" [
label="s4080: Context => Int = s4078 => s6095 + s2047"
shape=box, color=magenta, tooltip="s4080:Context => Int", style=filled, fillcolor=white
]
{rank=source; s4078}
"s5157" [
label="s5157: Col[Box] = s4078.Context.OUTPUTS()"
shape=box, color=darkblue, tooltip="s5157:Col[Box]", style=filled, fillcolor=white
]
"s5159" [
label="s5159: Int = s5157.Col.length()"
shape=box, color=darkblue, tooltip="s5159:Int", style=filled, fillcolor=white
]
"s5165" [
label="s5165: Col[Int] = s3.ColBuilder.replicate(s5159, s1112)"
shape=box, color=darkblue, tooltip="s5165:Col[Int]", style=filled, fillcolor=white
]
"s5173" [
label="s5173: Col[Long] = s5157.Col.map(s1120)"
shape=box, color=darkblue, tooltip="s5173:Col[Long]", style=filled, fillcolor=white
]
"s6058" [
label="s6058: Col[(Int, Long)] = s5165.Col.zip(s5173)"
shape=box, color=darkblue, tooltip="s6058:Col[(Int, Long)]", style=filled, fillcolor=white
]
"s6060" [
label="s6060: Col[(Box, (Int, Long))] = s5157.Col.zip(s6058)"
shape=box, color=darkblue, tooltip="s6060:Col[(Box, (Int, Long))]", style=filled, fillcolor=white
]
"s6062" [
label="s6062: Col[Int] = s6060.Col.map(s1718)"
shape=box, color=darkblue, tooltip="s6062:Col[Int]", style=filled, fillcolor=white
]
"s6064" [
label="s6064: Int = s6062.Col.sum(s12)"
shape=box, color=darkblue, tooltip="s6064:Int", style=filled, fillcolor=white
]
"s6079" [
label="s6079: Col[Int] =\ls3.ColBuilder.fromItems(Vector(s52, s82, s6064), anon$7<Int>)\l"
shape=box, color=darkblue, tooltip="s6079:Col[Int]", style=filled, fillcolor=white
]
"s6081" [
label="s6081: Int = s6079.Col.sum(s12)"
shape=box, color=darkblue, tooltip="s6081:Int", style=filled, fillcolor=white
]
"s6083" [
label="s6083: Int = s6079.Col.length()"
shape=box, color=darkblue, tooltip="s6083:Int", style=filled, fillcolor=white
]
"s6085" [
label="s6085: Int = s2035 * s6083"
shape=box, color=gray, tooltip="s6085:Int", style=filled, fillcolor=white
]
"s6086" [
label="s6086: Int = s6081 + s6085"
shape=box, color=gray, tooltip="s6086:Int", style=filled, fillcolor=white
]
"s6095" [
label="s6095: Int = s93 + s6086"
shape=box, color=gray, tooltip="s6095:Int", style=filled, fillcolor=white
]
{rank=sink; s4080}
}
"s6100" [
label="s6100: (Context => SigmaProp, Context => Int) = (s2055, s4080)"
shape=box, color=gray, tooltip="s6100:(Context => SigmaProp, Context => Int)", style=filled, fillcolor=white
]
"s2035" -> "s6085" [style=solid]
"s6083" -> "s6085" [style=solid]
"s1336" -> "s1337" [style=solid]
"s1716" -> "s1718" [style=dashed, color=lightgray, weight=0]
"s1999" -> "s1718" [style=solid]
"s92" -> "s1718" [style=solid]
"s2064" -> "s2072" [style=solid]
"s47" -> "s2072" [style=solid]
"s1960" -> "s1995" [style=solid]
"s1412" -> "s1995" [style=solid]
"s28" -> "s3072" [style=solid]
"s3061" -> "s3072" [style=solid]
"s5157" -> "s5173" [style=solid]
"s1120" -> "s5173" [style=solid]
"s2112" -> "s2114" [style=solid]
"s75" -> "s2114" [style=solid]
"s1491" -> "s1533" [style=solid]
"s1331" -> "s1533" [style=solid]
"s1424" -> "s1426" [style=dashed, color=lightgray, weight=0]
"s1484" -> "s1426" [style=solid]
"s1489" -> "s1426" [style=solid]
"s1775" -> "s1999" [style=solid]
"s1995" -> "s1999" [style=solid]
"s1091" -> "s1095" [style=solid]
"s1308" -> "s1391" [style=solid]
"s41" -> "s52" [style=solid]
"s48" -> "s52" [style=solid]
"s1407" -> "s1409" [style=solid]
"s1408" -> "s1409" [style=solid]
"s93" -> "s6095" [style=solid]
"s6086" -> "s6095" [style=solid]
"s2164" -> "s3061" [style=solid]
"s1426" -> "s3061" [style=solid]
"s91" -> "s93" [style=solid]
"s92" -> "s93" [style=solid]
"s6079" -> "s6081" [style=solid]
"s12" -> "s6081" [style=solid]
"s1533" -> "s1489" [style=solid]
"s1893" -> "s1960" [style=solid]
"s1333" -> "s1960" [style=solid]
"s4078" -> "s5157" [style=solid]
"s2053" -> "s2164" [style=solid]
"s6062" -> "s6064" [style=solid]
"s12" -> "s6064" [style=solid]
"s5165" -> "s6058" [style=solid]
"s5173" -> "s6058" [style=solid]
"s1315" -> "s1338" [style=solid]
"s1337" -> "s1338" [style=solid]
"s3" -> "s6079" [style=solid]
"s52" -> "s6079" [style=solid]
"s82" -> "s6079" [style=solid]
"s6064" -> "s6079" [style=solid]
"s5157" -> "s6060" [style=solid]
"s6058" -> "s6060" [style=solid]
"s1392" -> "s1407" [style=solid]
"s1338" -> "s1407" [style=solid]
"s1315" -> "s1392" [style=solid]
"s1391" -> "s1392" [style=solid]
"s2072" -> "s2112" [style=solid]
"s4078" -> "s4080" [style=dashed, color=lightgray, weight=0]
"s6095" -> "s4080" [style=solid]
"s2047" -> "s4080" [style=solid]
"s1716" -> "s1720" [style=solid]
"s39" -> "s41" [style=solid]
"s2064" -> "s2140" [style=solid]
"s47" -> "s2140" [style=solid]
"s3081" -> "s3083" [style=solid]
"s1095" -> "s3083" [style=solid]
"s77" -> "s1333" [style=solid]
"s1332" -> "s1333" [style=solid]
"s3" -> "s3079" [style=solid]
"s2140" -> "s3079" [style=solid]
"s3072" -> "s3079" [style=solid]
"s3080" -> "s3081" [style=solid]
"s11" -> "s12" [style=solid]
"s2053" -> "s2055" [style=dashed, color=lightgray, weight=0]
"s2114" -> "s2055" [style=solid]
"s3083" -> "s2055" [style=solid]
"s28" -> "s39" [style=solid]
"s52" -> "s91" [style=solid]
"s82" -> "s91" [style=solid]
"s39" -> "s1112" [style=solid]
"s2053" -> "s2064" [style=solid]
"s1766" -> "s1775" [style=solid]
"s48" -> "s1775" [style=solid]
"s2055" -> "s6100" [style=solid]
"s4080" -> "s6100" [style=solid]
"s6079" -> "s6083" [style=solid]
"s3" -> "s5165" [style=solid]
"s5159" -> "s5165" [style=solid]
"s1112" -> "s5165" [style=solid]
"s1473" -> "s1484" [style=solid]
"s1182" -> "s1484" [style=solid]
"s28" -> "s3080" [style=solid]
"s3079" -> "s3080" [style=solid]
"s1331" -> "s1336" [style=solid]
"s1721" -> "s1766" [style=solid]
"s1178" -> "s1766" [style=solid]
"s6081" -> "s6086" [style=solid]
"s6085" -> "s6086" [style=solid]
"s1410" -> "s1412" [style=solid]
"s1411" -> "s1412" [style=solid]
"s1720" -> "s1721" [style=solid]
"s71" -> "s75" [style=solid]
"s1424" -> "s1491" [style=solid]
"s6060" -> "s6062" [style=solid]
"s1718" -> "s6062" [style=solid]
"s1721" -> "s1893" [style=solid]
"s1311" -> "s1893" [style=solid]
"s77" -> "s82" [style=solid]
"s81" -> "s82" [style=solid]
"s5157" -> "s5159" [style=solid]
"s1409" -> "s1410" [style=solid]
"s1424" -> "s1473" [style=solid]
"s1118" -> "s1120" [style=dashed, color=lightgray, weight=0]
"s1118" -> "s1120" [style=solid]
"s1095" -> "s1331" [style=solid]
}
