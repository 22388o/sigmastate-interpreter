digraph "simple_branching_verify" {
concentrate=true
node [style=filled, fillcolor=orangered]

"s37" [
label="s37: Boolean = Const(true)"
shape=box, color=gray, tooltip="s37:Boolean", style=filled, fillcolor=white
]
"s485" [
label="s485: Byte = Const(21)"
shape=box, color=gray, tooltip="s485:Byte", style=filled, fillcolor=white
]
"s28" [
label="s28: TestSigmaDslBuilder = TestSigmaDslBuilderCtor()"
shape=box, color=green, tooltip="s28:TestSigmaDslBuilder", style=filled, fillcolor=white
]
"s3" [
label="s3: ColOverArrayBuilder = ColOverArrayBuilderCtor()"
shape=box, color=green, tooltip="s3:ColOverArrayBuilder", style=filled, fillcolor=white
]
"s783" [
label="s783: WArray[Byte] =\lWArrayConst(Array(-113, -63, -110, 87, 1, 46, -20, 52, 20, 50, -16, -104, 60, -88, -17, -69, -75, -19, 97, -56, -33, 58, 102, 94, 37, -119, -65, -61, 69, 86, 48, 4), Liftable(anon$5<Byte>))\l"
shape=box, color=gray, tooltip="s783:WArray[Byte]", style=filled, fillcolor=white
]
"s784" [
label="s784: Col[Byte] = s3.ColBuilder.fromArray(s783)"
shape=box, color=darkblue, tooltip="s784:Col[Byte]", style=filled, fillcolor=white
]
"s91" [
label="s91: Int = Const(1)"
shape=box, color=gray, tooltip="s91:Int", style=filled, fillcolor=white
]
"s594" [
label="s594: WArray[Byte] =\lWArrayConst(Array(-79, 56, -49, -77, 85, 59, -101, 11, -83, -83, 83, -84, -60, -16, -75, 27, -19, -47, 38, 28, -100, 42, -55, -55, 44, 55, 39, 85, 5, 86, -11, -86), Liftable(anon$5<Byte>))\l"
shape=box, color=gray, tooltip="s594:WArray[Byte]", style=filled, fillcolor=white
]
"s595" [
label="s595: Col[Byte] = s3.ColBuilder.fromArray(s594)"
shape=box, color=darkblue, tooltip="s595:Col[Byte]", style=filled, fillcolor=white
]
subgraph cluster_s1267 {
style=dashed; color="#FFCCFF"
"s1265" [
label="s1265: Context"
shape=oval, color=gray, tooltip="s1265:Context", style=filled, fillcolor=white
]
"s1267" [
label="s1267: Context => Boolean = s1265 => s28.SigmaDslBuilder.allOf(s2483)"
shape=box, color=magenta, tooltip="s1267:Context => Boolean", style=filled, fillcolor=white
]
{rank=source; s1265}
"s1279" [
label="s1279: Col[Box] = s1265.Context.INPUTS()"
shape=box, color=darkblue, tooltip="s1279:Col[Box]", style=filled, fillcolor=white
]
"s1281" [
label="s1281: Int = s1279.Col.length()"
shape=box, color=darkblue, tooltip="s1281:Int", style=filled, fillcolor=white
]
"s1330" [
label="s1330: Boolean = s1281 == s91"
shape=box, color=gray, tooltip="s1330:Boolean", style=filled, fillcolor=white
]
subgraph cluster_s1335 {
style=dashed; color="#FFCCCC"
"s1335" [
label="s1335: Thunk[Boolean] = Thunk(s1458, [s1338,s1380,s1402,s1458])"
shape=box, color=red, tooltip="s1335:Thunk[Boolean]", style=filled, fillcolor=white
]
"s1338" [
label="s1338: WOption[Col[Byte]] = s1265.Context.getVar(s485, ColElem<Col[Byte]>)"
shape=box, color=darkblue, tooltip="s1338:WOption[Col[Byte]]", style=filled, fillcolor=white
]
"s1380" [
label="s1380: Col[Byte] = s1338.WOption.get()"
shape=box, color=darkblue, tooltip="s1380:Col[Byte]", style=filled, fillcolor=white
]
"s1402" [
label="s1402: Col[Byte] = s28.SigmaDslBuilder.blake2b256(s1380)"
shape=box, color=darkblue, tooltip="s1402:Col[Byte]", style=filled, fillcolor=white
]
"s1458" [
label="s1458: Boolean = s1402 == s595"
shape=box, color=gray, tooltip="s1458:Boolean", style=filled, fillcolor=white
]
{rank=sink; s1335}
}
subgraph cluster_s1526 {
style=dashed; color="#FFCCCC"
"s1526" [
label="s1526: Thunk[Boolean] = Thunk(s1649, [s1529,s1571,s1593,s1649])"
shape=box, color=red, tooltip="s1526:Thunk[Boolean]", style=filled, fillcolor=white
]
"s1529" [
label="s1529: WOption[Col[Byte]] = s1265.Context.getVar(s485, ColElem<Col[Byte]>)"
shape=box, color=darkblue, tooltip="s1529:WOption[Col[Byte]]", style=filled, fillcolor=white
]
"s1571" [
label="s1571: Col[Byte] = s1529.WOption.get()"
shape=box, color=darkblue, tooltip="s1571:Col[Byte]", style=filled, fillcolor=white
]
"s1593" [
label="s1593: Col[Byte] = s28.SigmaDslBuilder.blake2b256(s1571)"
shape=box, color=darkblue, tooltip="s1593:Col[Byte]", style=filled, fillcolor=white
]
"s1649" [
label="s1649: Boolean = s1593 == s784"
shape=box, color=gray, tooltip="s1649:Boolean", style=filled, fillcolor=white
]
{rank=sink; s1526}
}
"s1716" [
label="s1716: Boolean = IfThenElseLazy(s1330, s1335, s1526)"
shape=box, color=gray, tooltip="s1716:Boolean", style=filled, fillcolor=white
]
"s2483" [
label="s2483: Col[Boolean] =\ls3.ColBuilder.fromItems(Vector(s37, s1716), anon$4<Boolean>)\l"
shape=box, color=darkblue, tooltip="s2483:Col[Boolean]", style=filled, fillcolor=white
]
{rank=sink; s1267}
}
"s518" [
label="s518: Int = CostOf(Const:() => Col[IV])"
shape=box, color=gray, tooltip="s518:Int", style=filled, fillcolor=white
]
"s516" [
label="s516: Long = TypeSize(SByte)"
shape=box, color=gray, tooltip="s516:Long", style=filled, fillcolor=white
]
"s586" [
label="s586: Int = Const(32)"
shape=box, color=gray, tooltip="s586:Int", style=filled, fillcolor=white
]
"s649" [
label="s649: Long = ToLong s586"
shape=box, color=gray, tooltip="s649:Long", style=filled, fillcolor=white
]
"s650" [
label="s650: Long = s516 * s649"
shape=box, color=gray, tooltip="s650:Long", style=filled, fillcolor=white
]
"s600" [
label="s600: Int = s595.Col.length()"
shape=box, color=darkblue, tooltip="s600:Int", style=filled, fillcolor=white
]
"s663" [
label="s663: Long = ToLong s600"
shape=box, color=gray, tooltip="s663:Long", style=filled, fillcolor=white
]
"s664" [
label="s664: Long = s516 * s663"
shape=box, color=gray, tooltip="s664:Long", style=filled, fillcolor=white
]
"s665" [
label="s665: Long = s650 + s664"
shape=box, color=gray, tooltip="s665:Long", style=filled, fillcolor=white
]
"s580" [
label="s580: Long = Const(1024l)"
shape=box, color=gray, tooltip="s580:Long", style=filled, fillcolor=white
]
"s667" [
label="s667: Long = s665 / s580"
shape=box, color=gray, tooltip="s667:Long", style=filled, fillcolor=white
]
"s668" [
label="s668: Int = s667.toInt"
shape=box, color=gray, tooltip="s668:Int", style=filled, fillcolor=white
]
"s669" [
label="s669: Int = CostOf(EQ_per_kb:(T,T) => SBoolean)"
shape=box, color=gray, tooltip="s669:Int", style=filled, fillcolor=white
]
"s670" [
label="s670: Int = s668 * s669"
shape=box, color=gray, tooltip="s670:Int", style=filled, fillcolor=white
]
"s38" [
label="s38: Int = CostOf(Const:() => SBoolean)"
shape=box, color=gray, tooltip="s38:Int", style=filled, fillcolor=white
]
"s92" [
label="s92: Int = CostOf(Const:() => SInt)"
shape=box, color=gray, tooltip="s92:Int", style=filled, fillcolor=white
]
"s583" [
label="s583: Int =\lCostOf(CalcBlake2b256_per_kb:(Col[SByte]) => Col[SByte])\l"
shape=box, color=gray, tooltip="s583:Int", style=filled, fillcolor=white
]
"s48" [
label="s48: CostModel = s28.SigmaDslBuilder.CostModel()"
shape=box, color=darkblue, tooltip="s48:CostModel", style=filled, fillcolor=white
]
"s494" [
label="s494: Int = s48.CostModel.GetVar()"
shape=box, color=darkblue, tooltip="s494:Int", style=filled, fillcolor=white
]
"s519" [
label="s519: Int = s494 + s518"
shape=box, color=gray, tooltip="s519:Int", style=filled, fillcolor=white
]
"s64" [
label="s64: Int = s48.CostModel.CollectionConst()"
shape=box, color=darkblue, tooltip="s64:Int", style=filled, fillcolor=white
]
"s11" [
label="s11: Int = Const(0)"
shape=box, color=gray, tooltip="s11:Int", style=filled, fillcolor=white
]
"s12" [
label="s12: IntPlusMonoid[Int] = IntPlusMonoidCtor(s11)"
shape=box, color=green, tooltip="s12:IntPlusMonoid[Int]", style=filled, fillcolor=white
]
"s1258" [
label="s1258: Int = CostOf(AND_per_item:(Col[SBoolean]) => SBoolean)"
shape=box, color=gray, tooltip="s1258:Int", style=filled, fillcolor=white
]
"s50" [
label="s50: Int = s48.CostModel.AccessBox()"
shape=box, color=darkblue, tooltip="s50:Int", style=filled, fillcolor=white
]
"s789" [
label="s789: Int = s784.Col.length()"
shape=box, color=darkblue, tooltip="s789:Int", style=filled, fillcolor=white
]
"s852" [
label="s852: Long = ToLong s789"
shape=box, color=gray, tooltip="s852:Long", style=filled, fillcolor=white
]
"s853" [
label="s853: Long = s516 * s852"
shape=box, color=gray, tooltip="s853:Long", style=filled, fillcolor=white
]
"s854" [
label="s854: Long = s650 + s853"
shape=box, color=gray, tooltip="s854:Long", style=filled, fillcolor=white
]
"s856" [
label="s856: Long = s854 / s580"
shape=box, color=gray, tooltip="s856:Long", style=filled, fillcolor=white
]
"s857" [
label="s857: Int = s856.toInt"
shape=box, color=gray, tooltip="s857:Int", style=filled, fillcolor=white
]
"s859" [
label="s859: Int = s857 * s669"
shape=box, color=gray, tooltip="s859:Int", style=filled, fillcolor=white
]
"s87" [
label="s87: Int = CostOf(SizeOf:(Col[IV]) => SInt)"
shape=box, color=gray, tooltip="s87:Int", style=filled, fillcolor=white
]
"s865" [
label="s865: Int = CostOf(If:(SBoolean,T,T) => T)"
shape=box, color=gray, tooltip="s865:Int", style=filled, fillcolor=white
]
subgraph cluster_s2498 {
style=dashed; color="#FFCCFF"
"s2496" [
label="s2496: Context"
shape=oval, color=gray, tooltip="s2496:Context", style=filled, fillcolor=white
]
"s2498" [
label="s2498: Context => Int = s2496 => s3716 + s3720"
shape=box, color=magenta, tooltip="s2498:Context => Int", style=filled, fillcolor=white
]
{rank=source; s2496}
"s2509" [
label="s2509: Col[Box] = s2496.Context.INPUTS()"
shape=box, color=darkblue, tooltip="s2509:Col[Box]", style=filled, fillcolor=white
]
"s2511" [
label="s2511: Int = s2509.Col.length()"
shape=box, color=darkblue, tooltip="s2511:Int", style=filled, fillcolor=white
]
"s2548" [
label="s2548: Int = s50 * s2511"
shape=box, color=gray, tooltip="s2548:Int", style=filled, fillcolor=white
]
"s2549" [
label="s2549: Int = s64 + s2548"
shape=box, color=gray, tooltip="s2549:Int", style=filled, fillcolor=white
]
"s2551" [
label="s2551: Int = s2549 + s87"
shape=box, color=gray, tooltip="s2551:Int", style=filled, fillcolor=white
]
"s2560" [
label="s2560: Int = s2551 + s92"
shape=box, color=gray, tooltip="s2560:Int", style=filled, fillcolor=white
]
"s2948" [
label="s2948: WOption[Col[Byte]] = s2496.Context.getVar(s485, ColElem<Col[Byte]>)"
shape=box, color=darkblue, tooltip="s2948:WOption[Col[Byte]]", style=filled, fillcolor=white
]
"s2990" [
label="s2990: Col[Byte] = s2948.WOption.get()"
shape=box, color=darkblue, tooltip="s2990:Col[Byte]", style=filled, fillcolor=white
]
"s2998" [
label="s2998: Int = s2990.Col.length()"
shape=box, color=darkblue, tooltip="s2998:Int", style=filled, fillcolor=white
]
"s3039" [
label="s3039: Long = ToLong s2998"
shape=box, color=gray, tooltip="s3039:Long", style=filled, fillcolor=white
]
"s3040" [
label="s3040: Long = s516 * s3039"
shape=box, color=gray, tooltip="s3040:Long", style=filled, fillcolor=white
]
"s3042" [
label="s3042: Long = s3040 / s580"
shape=box, color=gray, tooltip="s3042:Long", style=filled, fillcolor=white
]
"s3043" [
label="s3043: Int = s3042.toInt"
shape=box, color=gray, tooltip="s3043:Int", style=filled, fillcolor=white
]
"s3045" [
label="s3045: Int = s3043 * s583"
shape=box, color=gray, tooltip="s3045:Int", style=filled, fillcolor=white
]
"s3046" [
label="s3046: Int = s519 + s3045"
shape=box, color=gray, tooltip="s3046:Int", style=filled, fillcolor=white
]
"s3097" [
label="s3097: Int = s3046 + s518"
shape=box, color=gray, tooltip="s3097:Int", style=filled, fillcolor=white
]
"s3132" [
label="s3132: Int = s3097 + s670"
shape=box, color=gray, tooltip="s3132:Int", style=filled, fillcolor=white
]
"s3321" [
label="s3321: Int = s3097 + s859"
shape=box, color=gray, tooltip="s3321:Int", style=filled, fillcolor=white
]
"s3324" [
label="s3324: Int = s3132 max s3321"
shape=box, color=gray, tooltip="s3324:Int", style=filled, fillcolor=white
]
"s3325" [
label="s3325: Int = s2560 + s3324"
shape=box, color=gray, tooltip="s3325:Int", style=filled, fillcolor=white
]
"s3327" [
label="s3327: Int = s3325 + s865"
shape=box, color=gray, tooltip="s3327:Int", style=filled, fillcolor=white
]
"s3714" [
label="s3714: Col[Int] =\ls3.ColBuilder.fromItems(Vector(s38, s3327), anon$7<Int>)\l"
shape=box, color=darkblue, tooltip="s3714:Col[Int]", style=filled, fillcolor=white
]
"s3716" [
label="s3716: Int = s3714.Col.sum(s12)"
shape=box, color=darkblue, tooltip="s3716:Int", style=filled, fillcolor=white
]
"s3718" [
label="s3718: Int = s3714.Col.length()"
shape=box, color=darkblue, tooltip="s3718:Int", style=filled, fillcolor=white
]
"s3720" [
label="s3720: Int = s1258 * s3718"
shape=box, color=gray, tooltip="s3720:Int", style=filled, fillcolor=white
]
{rank=sink; s2498}
}
"s3724" [
label="s3724: (Context => Boolean, Context => Int) = (s1267, s2498)"
shape=box, color=gray, tooltip="s3724:(Context => Boolean, Context => Int)", style=filled, fillcolor=white
]
"s516" -> "s3040" [style=solid]
"s3039" -> "s3040" [style=solid]
"s1402" -> "s1458" [style=solid]
"s595" -> "s1458" [style=solid]
"s668" -> "s670" [style=solid]
"s669" -> "s670" [style=solid]
"s50" -> "s2548" [style=solid]
"s2511" -> "s2548" [style=solid]
"s1265" -> "s1529" [style=solid]
"s485" -> "s1529" [style=solid]
"s519" -> "s3046" [style=solid]
"s3045" -> "s3046" [style=solid]
"s1281" -> "s1330" [style=solid]
"s91" -> "s1330" [style=solid]
"s1265" -> "s1279" [style=solid]
"s3042" -> "s3043" [style=solid]
"s516" -> "s853" [style=solid]
"s852" -> "s853" [style=solid]
"s784" -> "s789" [style=solid]
"s1267" -> "s3724" [style=solid]
"s2498" -> "s3724" [style=solid]
"s3" -> "s2483" [style=solid]
"s37" -> "s2483" [style=solid]
"s1716" -> "s2483" [style=solid]
"s1649" -> "s1526" [style=solid]
"s3325" -> "s3327" [style=solid]
"s865" -> "s3327" [style=solid]
"s3046" -> "s3097" [style=solid]
"s518" -> "s3097" [style=solid]
"s1258" -> "s3720" [style=solid]
"s3718" -> "s3720" [style=solid]
"s1265" -> "s1338" [style=solid]
"s485" -> "s1338" [style=solid]
"s2551" -> "s2560" [style=solid]
"s92" -> "s2560" [style=solid]
"s789" -> "s852" [style=solid]
"s3714" -> "s3718" [style=solid]
"s650" -> "s665" [style=solid]
"s664" -> "s665" [style=solid]
"s1279" -> "s1281" [style=solid]
"s28" -> "s1402" [style=solid]
"s1380" -> "s1402" [style=solid]
"s494" -> "s519" [style=solid]
"s518" -> "s519" [style=solid]
"s2496" -> "s2498" [style=dashed, color=lightgray, weight=0]
"s3716" -> "s2498" [style=solid]
"s3720" -> "s2498" [style=solid]
"s2948" -> "s2990" [style=solid]
"s516" -> "s650" [style=solid]
"s649" -> "s650" [style=solid]
"s2496" -> "s2509" [style=solid]
"s856" -> "s857" [style=solid]
"s3" -> "s3714" [style=solid]
"s38" -> "s3714" [style=solid]
"s3327" -> "s3714" [style=solid]
"s2549" -> "s2551" [style=solid]
"s87" -> "s2551" [style=solid]
"s3097" -> "s3321" [style=solid]
"s859" -> "s3321" [style=solid]
"s3040" -> "s3042" [style=solid]
"s580" -> "s3042" [style=solid]
"s854" -> "s856" [style=solid]
"s580" -> "s856" [style=solid]
"s48" -> "s64" [style=solid]
"s11" -> "s12" [style=solid]
"s3" -> "s784" [style=solid]
"s783" -> "s784" [style=solid]
"s586" -> "s649" [style=solid]
"s1529" -> "s1571" [style=solid]
"s48" -> "s494" [style=solid]
"s667" -> "s668" [style=solid]
"s2560" -> "s3325" [style=solid]
"s3324" -> "s3325" [style=solid]
"s600" -> "s663" [style=solid]
"s28" -> "s48" [style=solid]
"s1265" -> "s1267" [style=dashed, color=lightgray, weight=0]
"s28" -> "s1267" [style=solid]
"s2483" -> "s1267" [style=solid]
"s48" -> "s50" [style=solid]
"s1330" -> "s1716" [style=solid]
"s1335" -> "s1716" [style=solid]
"s1526" -> "s1716" [style=solid]
"s2496" -> "s2948" [style=solid]
"s485" -> "s2948" [style=solid]
"s595" -> "s600" [style=solid]
"s2509" -> "s2511" [style=solid]
"s3" -> "s595" [style=solid]
"s594" -> "s595" [style=solid]
"s857" -> "s859" [style=solid]
"s669" -> "s859" [style=solid]
"s1593" -> "s1649" [style=solid]
"s784" -> "s1649" [style=solid]
"s2998" -> "s3039" [style=solid]
"s3132" -> "s3324" [style=solid]
"s3321" -> "s3324" [style=solid]
"s665" -> "s667" [style=solid]
"s580" -> "s667" [style=solid]
"s28" -> "s1593" [style=solid]
"s1571" -> "s1593" [style=solid]
"s1338" -> "s1380" [style=solid]
"s650" -> "s854" [style=solid]
"s853" -> "s854" [style=solid]
"s3097" -> "s3132" [style=solid]
"s670" -> "s3132" [style=solid]
"s1458" -> "s1335" [style=solid]
"s3714" -> "s3716" [style=solid]
"s12" -> "s3716" [style=solid]
"s516" -> "s664" [style=solid]
"s663" -> "s664" [style=solid]
"s3043" -> "s3045" [style=solid]
"s583" -> "s3045" [style=solid]
"s64" -> "s2549" [style=solid]
"s2548" -> "s2549" [style=solid]
"s2990" -> "s2998" [style=solid]
}
