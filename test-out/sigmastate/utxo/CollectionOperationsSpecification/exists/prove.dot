digraph "prove" {
concentrate=true
node [style=filled, fillcolor=orangered]

"s28" [
label="s28: TestSigmaDslBuilder = TestSigmaDslBuilderCtor()"
shape=box, color=green, tooltip="s28:TestSigmaDslBuilder", style=filled, fillcolor=white
]
"s3" [
label="s3: ColOverArrayBuilder = ColOverArrayBuilderCtor()"
shape=box, color=green, tooltip="s3:ColOverArrayBuilder", style=filled, fillcolor=white
]
"s11" [
label="s11: Int = Const(0)"
shape=box, color=gray, tooltip="s11:Int", style=filled, fillcolor=white
]
"s7690" [
label="s7690: Int = Const(1)"
shape=box, color=gray, tooltip="s7690:Int", style=filled, fillcolor=white
]
"s18339" [
label="s18339: Int = Const(2)"
shape=box, color=gray, tooltip="s18339:Int", style=filled, fillcolor=white
]
"s10896" [
label="s10896: Int = Const(3)"
shape=box, color=gray, tooltip="s10896:Int", style=filled, fillcolor=white
]
"s2405" [
label="s2405: Int = Const(4)"
shape=box, color=gray, tooltip="s2405:Int", style=filled, fillcolor=white
]
"s18353" [
label="s18353: Int = Const(5)"
shape=box, color=gray, tooltip="s18353:Int", style=filled, fillcolor=white
]
"s18357" [
label="s18357: Col[Int] =\ls3.ColBuilder.fromItems(List(s11, s7690, s18339, s10896, s2405, s18353), anon$7<Int>)\l"
shape=box, color=darkblue, tooltip="s18357:Col[Int]", style=filled, fillcolor=white
]
"s23873" [
label="s23873: Col[Int] =\ls3.ColBuilder.fromItems(List(s7690, s7690, s11, s11, s11, s7690), anon$7<Int>)\l"
shape=box, color=darkblue, tooltip="s23873:Col[Int]", style=filled, fillcolor=white
]
subgraph cluster_s24375 {
style=dashed; color="#FFCCCC"
"s24375" [
label="s24375: Thunk[Int] = Thunk(s18353, [s18353])"
shape=box, color=red, tooltip="s24375:Thunk[Int]", style=filled, fillcolor=white
]
"s18353" [
label="s18353: Int = Const(5)"
shape=box, color=gray, tooltip="s18353:Int", style=filled, fillcolor=white
]
{rank=sink; s24375}
}
subgraph cluster_s24319 {
style=dashed; color="#FFCCFF"
"s24317" [
label="s24317: Int"
shape=oval, color=gray, tooltip="s24317:Int", style=filled, fillcolor=white
]
"s24319" [
label="s24319: Int => Boolean = s24317 => s24461 || { s24466 }"
shape=box, color=magenta, tooltip="s24319:Int => Boolean", style=filled, fillcolor=white
]
{rank=source; s24317}
"s24370" [
label="s24370: Boolean = s24317 <= s11"
shape=box, color=gray, tooltip="s24370:Boolean", style=filled, fillcolor=white
]
subgraph cluster_s24382 {
style=dashed; color="#FFCCCC"
"s24382" [
label="s24382: Thunk[Int] = Thunk(s24388, [s24388])"
shape=box, color=red, tooltip="s24382:Thunk[Int]", style=filled, fillcolor=white
]
"s24388" [
label="s24388: Int = s24317 - s7690"
shape=box, color=gray, tooltip="s24388:Int", style=filled, fillcolor=white
]
{rank=sink; s24382}
}
"s24394" [
label="s24394: Int = IfThenElseLazy(s24370, s24375, s24382)"
shape=box, color=gray, tooltip="s24394:Int", style=filled, fillcolor=white
]
"s24438" [
label="s24438: Int = s23873.Col.apply(s24394)"
shape=box, color=darkblue, tooltip="s24438:Int", style=filled, fillcolor=white
]
"s24461" [
label="s24461: Boolean = s24438 == s11"
shape=box, color=gray, tooltip="s24461:Boolean", style=filled, fillcolor=white
]
subgraph cluster_s24466 {
style=dashed; color="#FFCCCC"
"s24466" [
label="s24466: Thunk[Boolean] =\lThunk(s24603, [s24516,s24523,s24536,s24580,s24603])\l"
shape=box, color=red, tooltip="s24466:Thunk[Boolean]", style=filled, fillcolor=white
]
subgraph cluster_s24516 {
style=dashed; color="#FFCCCC"
"s24516" [
label="s24516: Thunk[Int] = Thunk(s18353, [s18353])"
shape=box, color=red, tooltip="s24516:Thunk[Int]", style=filled, fillcolor=white
]
"s18353" [
label="s18353: Int = Const(5)"
shape=box, color=gray, tooltip="s18353:Int", style=filled, fillcolor=white
]
{rank=sink; s24516}
}
subgraph cluster_s24523 {
style=dashed; color="#FFCCCC"
"s24523" [
label="s24523: Thunk[Int] = Thunk(s24405, [s24405])"
shape=box, color=red, tooltip="s24523:Thunk[Int]", style=filled, fillcolor=white
]
"s24405" [
label="s24405: Int = s24317 - s7690"
shape=box, color=gray, tooltip="s24405:Int", style=filled, fillcolor=white
]
{rank=sink; s24523}
}
"s24536" [
label="s24536: Int = IfThenElseLazy(s24370, s24516, s24523)"
shape=box, color=gray, tooltip="s24536:Int", style=filled, fillcolor=white
]
"s24580" [
label="s24580: Int = s23873.Col.apply(s24536)"
shape=box, color=darkblue, tooltip="s24580:Int", style=filled, fillcolor=white
]
"s24603" [
label="s24603: Boolean = s24580 == s7690"
shape=box, color=gray, tooltip="s24603:Boolean", style=filled, fillcolor=white
]
{rank=sink; s24466}
}
{rank=sink; s24319}
}
"s25191" [
label="s25191: Col[Boolean] = s18357.Col.map(s24319)"
shape=box, color=darkblue, tooltip="s25191:Col[Boolean]", style=filled, fillcolor=white
]
subgraph cluster_s25209 {
style=dashed; color="#FFCCFF"
"s25207" [
label="s25207: Context"
shape=oval, color=gray, tooltip="s25207:Context", style=filled, fillcolor=white
]
"s25209" [
label="s25209: Context => Boolean = s25207 => s28.SigmaDslBuilder.allOf(s25191)"
shape=box, color=magenta, tooltip="s25209:Context => Boolean", style=filled, fillcolor=white
]
{rank=source; s25207}
{rank=sink; s25209}
}
"s7691" [
label="s7691: Int = CostOf(Const:() => SInt)"
shape=box, color=gray, tooltip="s7691:Int", style=filled, fillcolor=white
]
"s18358" [
label="s18358: Col[Int] =\ls3.ColBuilder.fromItems(List(s7691, s7691, s7691, s7691, s7691, s7691), anon$7<Int>)\l"
shape=box, color=darkblue, tooltip="s18358:Col[Int]", style=filled, fillcolor=white
]
"s7640" [
label="s7640: Long = TypeSize(SInt)"
shape=box, color=gray, tooltip="s7640:Long", style=filled, fillcolor=white
]
"s18359" [
label="s18359: Col[Long] =\ls3.ColBuilder.fromItems(List(s7640, s7640, s7640, s7640, s7640, s7640), anon$8<Long>)\l"
shape=box, color=darkblue, tooltip="s18359:Col[Long]", style=filled, fillcolor=white
]
"s19204" [
label="s19204: Col[(Int, Long)] = s18358.Col.zip(s18359)"
shape=box, color=darkblue, tooltip="s19204:Col[(Int, Long)]", style=filled, fillcolor=white
]
"s19206" [
label="s19206: Col[(Int, (Int, Long))] = s18357.Col.zip(s19204)"
shape=box, color=darkblue, tooltip="s19206:Col[(Int, (Int, Long))]", style=filled, fillcolor=white
]
"s12667" [
label="s12667: Int = CostOf(-:(SInt,SInt) => SInt)"
shape=box, color=gray, tooltip="s12667:Int", style=filled, fillcolor=white
]
"s12059" [
label="s12059: Int = CostOf(ByIndex:[IV](Col[IV],SInt) => IV)"
shape=box, color=gray, tooltip="s12059:Int", style=filled, fillcolor=white
]
"s24311" [
label="s24311: Int = CostOf(BinOr:(SBoolean,SBoolean) => SBoolean)"
shape=box, color=gray, tooltip="s24311:Int", style=filled, fillcolor=white
]
"s18434" [
label="s18434: Int = CostOf(If:(SBoolean,T,T) => T)"
shape=box, color=gray, tooltip="s18434:Int", style=filled, fillcolor=white
]
"s18360" [
label="s18360: Int = CostOf(ConcreteCollection:() => Col[IV])"
shape=box, color=gray, tooltip="s18360:Int", style=filled, fillcolor=white
]
"s12" [
label="s12: IntPlusMonoid[Int] = IntPlusMonoidCtor(s11)"
shape=box, color=green, tooltip="s12:IntPlusMonoid[Int]", style=filled, fillcolor=white
]
"s23981" [
label="s23981: Int = s18358.Col.sum(s12)"
shape=box, color=darkblue, tooltip="s23981:Int", style=filled, fillcolor=white
]
"s23982" [
label="s23982: Int = s18360 + s23981"
shape=box, color=gray, tooltip="s23982:Int", style=filled, fillcolor=white
]
subgraph cluster_s24755 {
style=dashed; color="#FFCCFF"
"s24753" [
label="s24753: (Int, (Int, Long))"
shape=oval, color=gray, tooltip="s24753:(Int, (Int, Long))", style=filled, fillcolor=white
]
"s24755" [
label="s24755: (Int, (Int, Long)) => Int = s24753 => s25185 + s24311"
shape=box, color=magenta, tooltip="s24755:(Int, (Int, Long)) => Int", style=filled, fillcolor=white
]
{rank=source; s24753}
"s24757" [
label="s24757: (Int, Long) = s24753._2"
shape=box, color=gray, tooltip="s24757:(Int, Long)", style=filled, fillcolor=white
]
"s24758" [
label="s24758: Int = s24757._1"
shape=box, color=gray, tooltip="s24758:Int", style=filled, fillcolor=white
]
"s24809" [
label="s24809: Int = s24758 + s7691"
shape=box, color=gray, tooltip="s24809:Int", style=filled, fillcolor=white
]
"s24846" [
label="s24846: Int = s24809 + s12667"
shape=box, color=gray, tooltip="s24846:Int", style=filled, fillcolor=white
]
"s24849" [
label="s24849: Int = s7691 max s24846"
shape=box, color=gray, tooltip="s24849:Int", style=filled, fillcolor=white
]
"s24850" [
label="s24850: Int = s24809 + s24849"
shape=box, color=gray, tooltip="s24850:Int", style=filled, fillcolor=white
]
"s24852" [
label="s24852: Int = s24850 + s18434"
shape=box, color=gray, tooltip="s24852:Int", style=filled, fillcolor=white
]
"s24890" [
label="s24890: Int = s23982 + s24852"
shape=box, color=gray, tooltip="s24890:Int", style=filled, fillcolor=white
]
"s24892" [
label="s24892: Int = s24890 + s12059"
shape=box, color=gray, tooltip="s24892:Int", style=filled, fillcolor=white
]
"s24900" [
label="s24900: Int = s24892 + s7691"
shape=box, color=gray, tooltip="s24900:Int", style=filled, fillcolor=white
]
"s25185" [
label="s25185: Int = s24900 + s24900"
shape=box, color=gray, tooltip="s25185:Int", style=filled, fillcolor=white
]
{rank=sink; s24755}
}
"s25199" [
label="s25199: Col[Int] = s19206.Col.map(s24755)"
shape=box, color=darkblue, tooltip="s25199:Col[Int]", style=filled, fillcolor=white
]
subgraph cluster_s26624 {
style=dashed; color="#FFCCFF"
"s26622" [
label="s26622: Context"
shape=oval, color=gray, tooltip="s26622:Context", style=filled, fillcolor=white
]
"s26624" [
label="s26624: Context => Int = s26622 => s25199.Col.sum(s12)"
shape=box, color=magenta, tooltip="s26624:Context => Int", style=filled, fillcolor=white
]
{rank=source; s26622}
{rank=sink; s26624}
}
"s28036" [
label="s28036: (Context => Boolean, Context => Int) = (s25209, s26624)"
shape=box, color=gray, tooltip="s28036:(Context => Boolean, Context => Int)", style=filled, fillcolor=white
]
"s18358" -> "s19204" [style=solid]
"s18359" -> "s19204" [style=solid]
"s19206" -> "s25199" [style=solid]
"s24755" -> "s25199" [style=solid]
"s24317" -> "s24405" [style=solid]
"s7690" -> "s24405" [style=solid]
"s24809" -> "s24850" [style=solid]
"s24849" -> "s24850" [style=solid]
"s24809" -> "s24846" [style=solid]
"s12667" -> "s24846" [style=solid]
"s18358" -> "s23981" [style=solid]
"s12" -> "s23981" [style=solid]
"s24753" -> "s24755" [style=dashed, color=lightgray, weight=0]
"s25185" -> "s24755" [style=solid]
"s24311" -> "s24755" [style=solid]
"s23982" -> "s24890" [style=solid]
"s24852" -> "s24890" [style=solid]
"s3" -> "s23873" [style=solid]
"s7690" -> "s23873" [style=solid]
"s7690" -> "s23873" [style=solid]
"s11" -> "s23873" [style=solid]
"s11" -> "s23873" [style=solid]
"s11" -> "s23873" [style=solid]
"s7690" -> "s23873" [style=solid]
"s24370" -> "s24536" [style=solid]
"s24516" -> "s24536" [style=solid]
"s24523" -> "s24536" [style=solid]
"s18357" -> "s19206" [style=solid]
"s19204" -> "s19206" [style=solid]
"s24900" -> "s25185" [style=solid]
"s24900" -> "s25185" [style=solid]
"s24580" -> "s24603" [style=solid]
"s7690" -> "s24603" [style=solid]
"s7691" -> "s24849" [style=solid]
"s24846" -> "s24849" [style=solid]
"s24370" -> "s24394" [style=solid]
"s24375" -> "s24394" [style=solid]
"s24382" -> "s24394" [style=solid]
"s24438" -> "s24461" [style=solid]
"s11" -> "s24461" [style=solid]
"s24317" -> "s24370" [style=solid]
"s11" -> "s24370" [style=solid]
"s26622" -> "s26624" [style=dashed, color=lightgray, weight=0]
"s25199" -> "s26624" [style=solid]
"s12" -> "s26624" [style=solid]
"s24757" -> "s24758" [style=solid]
"s23873" -> "s24438" [style=solid]
"s24394" -> "s24438" [style=solid]
"s24603" -> "s24466" [style=solid]
"s3" -> "s18357" [style=solid]
"s11" -> "s18357" [style=solid]
"s7690" -> "s18357" [style=solid]
"s18339" -> "s18357" [style=solid]
"s10896" -> "s18357" [style=solid]
"s2405" -> "s18357" [style=solid]
"s18353" -> "s18357" [style=solid]
"s24890" -> "s24892" [style=solid]
"s12059" -> "s24892" [style=solid]
"s25207" -> "s25209" [style=dashed, color=lightgray, weight=0]
"s28" -> "s25209" [style=solid]
"s25191" -> "s25209" [style=solid]
"s11" -> "s12" [style=solid]
"s24850" -> "s24852" [style=solid]
"s18434" -> "s24852" [style=solid]
"s18353" -> "s24375" [style=solid]
"s24753" -> "s24757" [style=solid]
"s24892" -> "s24900" [style=solid]
"s7691" -> "s24900" [style=solid]
"s18357" -> "s25191" [style=solid]
"s24319" -> "s25191" [style=solid]
"s3" -> "s18358" [style=solid]
"s7691" -> "s18358" [style=solid]
"s7691" -> "s18358" [style=solid]
"s7691" -> "s18358" [style=solid]
"s7691" -> "s18358" [style=solid]
"s7691" -> "s18358" [style=solid]
"s7691" -> "s18358" [style=solid]
"s18353" -> "s24516" [style=solid]
"s24758" -> "s24809" [style=solid]
"s7691" -> "s24809" [style=solid]
"s24317" -> "s24388" [style=solid]
"s7690" -> "s24388" [style=solid]
"s24317" -> "s24319" [style=dashed, color=lightgray, weight=0]
"s24461" -> "s24319" [style=solid]
"s24466" -> "s24319" [style=solid]
"s24405" -> "s24523" [style=solid]
"s24388" -> "s24382" [style=solid]
"s18360" -> "s23982" [style=solid]
"s23981" -> "s23982" [style=solid]
"s25209" -> "s28036" [style=solid]
"s26624" -> "s28036" [style=solid]
"s23873" -> "s24580" [style=solid]
"s24536" -> "s24580" [style=solid]
"s3" -> "s18359" [style=solid]
"s7640" -> "s18359" [style=solid]
"s7640" -> "s18359" [style=solid]
"s7640" -> "s18359" [style=solid]
"s7640" -> "s18359" [style=solid]
"s7640" -> "s18359" [style=solid]
"s7640" -> "s18359" [style=solid]
}
