digraph "verify" {
concentrate=true
node [style=filled, fillcolor=orangered]

"s10103" [
label="s10103: Int = Const(4)"
shape=box, color=gray, tooltip="s10103:Int", style=filled, fillcolor=white
]
"s6760" [
label="s6760: Long = Const(10l)"
shape=box, color=gray, tooltip="s6760:Long", style=filled, fillcolor=white
]
"s28" [
label="s28: TestSigmaDslBuilder = TestSigmaDslBuilderCtor()"
shape=box, color=green, tooltip="s28:TestSigmaDslBuilder", style=filled, fillcolor=white
]
"s768" [
label="s768: Int = Const(2)"
shape=box, color=gray, tooltip="s768:Int", style=filled, fillcolor=white
]
"s11" [
label="s11: Int = Const(0)"
shape=box, color=gray, tooltip="s11:Int", style=filled, fillcolor=white
]
"s8236" [
label="s8236: Int = Const(1)"
shape=box, color=gray, tooltip="s8236:Int", style=filled, fillcolor=white
]
"s3" [
label="s3: ColOverArrayBuilder = ColOverArrayBuilderCtor()"
shape=box, color=green, tooltip="s3:ColOverArrayBuilder", style=filled, fillcolor=white
]
"s30432" [
label="s30432: WArray[Byte] =\lWArrayConst(Array(37, 108, -125, -78, -105, 17, 77, 32, 27, 48, 23, -97, 63, 14, -16, -54, -50, -105, -125, 98, 45, -91, -105, 67, 38, -76, 54, 23, -118, -18, -10, 16), Liftable(anon$5<Byte>))\l"
shape=box, color=gray, tooltip="s30432:WArray[Byte]", style=filled, fillcolor=white
]
"s30433" [
label="s30433: Col[Byte] = s3.ColBuilder.fromArray(s30432)"
shape=box, color=darkblue, tooltip="s30433:Col[Byte]", style=filled, fillcolor=white
]
subgraph cluster_s31448 {
style=dashed; color="#FFCCFF"
"s31446" [
label="s31446: Context"
shape=oval, color=gray, tooltip="s31446:Context", style=filled, fillcolor=white
]
"s31448" [
label="s31448: Context => Boolean = s31446 => s30433 == s32353"
shape=box, color=magenta, tooltip="s31448:Context => Boolean", style=filled, fillcolor=white
]
{rank=source; s31446}
"s31467" [
label="s31467: Col[Box] = s31446.Context.INPUTS()"
shape=box, color=darkblue, tooltip="s31467:Col[Box]", style=filled, fillcolor=white
]
"s31500" [
label="s31500: Box = s31467.Col.apply(s11)"
shape=box, color=darkblue, tooltip="s31500:Box", style=filled, fillcolor=white
]
"s31522" [
label="s31522: Long = s31500.Box.value()"
shape=box, color=darkblue, tooltip="s31522:Long", style=filled, fillcolor=white
]
"s31532" [
label="s31532: Boolean = s31522 > s6760"
shape=box, color=gray, tooltip="s31532:Boolean", style=filled, fillcolor=white
]
subgraph cluster_s31537 {
style=dashed; color="#FFCCCC"
"s31537" [
label="s31537: Thunk[Col[Byte]] = Thunk(s31639, [s31574,s31597,s31639])"
shape=box, color=red, tooltip="s31537:Thunk[Col[Byte]]", style=filled, fillcolor=white
]
"s31574" [
label="s31574: Box = s31467.Col.apply(s768)"
shape=box, color=darkblue, tooltip="s31574:Box", style=filled, fillcolor=white
]
"s31597" [
label="s31597: WOption[Col[Byte]] = s31574.Box.getReg(s10103, ColElem<Col[Byte]>)"
shape=box, color=darkblue, tooltip="s31597:WOption[Col[Byte]]", style=filled, fillcolor=white
]
"s31639" [
label="s31639: Col[Byte] = s31597.WOption.get()"
shape=box, color=darkblue, tooltip="s31639:Col[Byte]", style=filled, fillcolor=white
]
{rank=sink; s31537}
}
subgraph cluster_s31662 {
style=dashed; color="#FFCCCC"
"s31662" [
label="s31662: Thunk[Col[Byte]] = Thunk(s31764, [s31699,s31722,s31764])"
shape=box, color=red, tooltip="s31662:Thunk[Col[Byte]]", style=filled, fillcolor=white
]
"s31699" [
label="s31699: Box = s31467.Col.apply(s8236)"
shape=box, color=darkblue, tooltip="s31699:Box", style=filled, fillcolor=white
]
"s31722" [
label="s31722: WOption[Col[Byte]] = s31699.Box.getReg(s10103, ColElem<Col[Byte]>)"
shape=box, color=darkblue, tooltip="s31722:WOption[Col[Byte]]", style=filled, fillcolor=white
]
"s31764" [
label="s31764: Col[Byte] = s31722.WOption.get()"
shape=box, color=darkblue, tooltip="s31764:Col[Byte]", style=filled, fillcolor=white
]
{rank=sink; s31662}
}
"s31786" [
label="s31786: Col[Byte] = IfThenElseLazy(s31532, s31537, s31662)"
shape=box, color=gray, tooltip="s31786:Col[Byte]", style=filled, fillcolor=white
]
"s32353" [
label="s32353: Col[Byte] = s28.SigmaDslBuilder.blake2b256(s31786)"
shape=box, color=darkblue, tooltip="s32353:Col[Byte]", style=filled, fillcolor=white
]
{rank=sink; s31448}
}
"s44" [
label="s44: Long = TypeSize(SByte)"
shape=box, color=gray, tooltip="s44:Long", style=filled, fillcolor=white
]
"s30438" [
label="s30438: Int = s30433.Col.length()"
shape=box, color=darkblue, tooltip="s30438:Int", style=filled, fillcolor=white
]
"s31419" [
label="s31419: Long = ToLong s30438"
shape=box, color=gray, tooltip="s31419:Long", style=filled, fillcolor=white
]
"s31420" [
label="s31420: Long = s44 * s31419"
shape=box, color=gray, tooltip="s31420:Long", style=filled, fillcolor=white
]
"s8695" [
label="s8695: Int = Const(32)"
shape=box, color=gray, tooltip="s8695:Int", style=filled, fillcolor=white
]
"s8758" [
label="s8758: Long = ToLong s8695"
shape=box, color=gray, tooltip="s8758:Long", style=filled, fillcolor=white
]
"s8759" [
label="s8759: Long = s44 * s8758"
shape=box, color=gray, tooltip="s8759:Long", style=filled, fillcolor=white
]
"s31435" [
label="s31435: Long = s31420 + s8759"
shape=box, color=gray, tooltip="s31435:Long", style=filled, fillcolor=white
]
"s124" [
label="s124: Long = Const(1024l)"
shape=box, color=gray, tooltip="s124:Long", style=filled, fillcolor=white
]
"s31437" [
label="s31437: Long = s31435 / s124"
shape=box, color=gray, tooltip="s31437:Long", style=filled, fillcolor=white
]
"s31438" [
label="s31438: Int = s31437.toInt"
shape=box, color=gray, tooltip="s31438:Int", style=filled, fillcolor=white
]
"s127" [
label="s127: Int = CostOf(EQ_per_kb:(T,T) => SBoolean)"
shape=box, color=gray, tooltip="s127:Int", style=filled, fillcolor=white
]
"s31440" [
label="s31440: Int = s31438 * s127"
shape=box, color=gray, tooltip="s31440:Int", style=filled, fillcolor=white
]
"s6727" [
label="s6727: Int = CostOf(Const:() => SInt)"
shape=box, color=gray, tooltip="s6727:Int", style=filled, fillcolor=white
]
"s6749" [
label="s6749: Int = CostOf(ByIndex:[IV](Col[IV],SInt) => IV)"
shape=box, color=gray, tooltip="s6749:Int", style=filled, fillcolor=white
]
"s3524" [
label="s3524: Int = CostOf(ExtractAmount:(SBox) => SLong)"
shape=box, color=gray, tooltip="s3524:Int", style=filled, fillcolor=white
]
"s31044" [
label="s31044: Int = CostOf(If:(SBoolean,T,T) => T)"
shape=box, color=gray, tooltip="s31044:Int", style=filled, fillcolor=white
]
"s3492" [
label="s3492: CostModel = s28.SigmaDslBuilder.CostModel()"
shape=box, color=darkblue, tooltip="s3492:CostModel", style=filled, fillcolor=white
]
"s3508" [
label="s3508: Int = s3492.CostModel.CollectionConst()"
shape=box, color=darkblue, tooltip="s3508:Int", style=filled, fillcolor=white
]
"s3613" [
label="s3613: Int = CostOf(Const:() => SLong)"
shape=box, color=gray, tooltip="s3613:Int", style=filled, fillcolor=white
]
"s8692" [
label="s8692: Int =\lCostOf(CalcBlake2b256_per_kb:(Col[SByte]) => Col[SByte])\l"
shape=box, color=gray, tooltip="s8692:Int", style=filled, fillcolor=white
]
"s47" [
label="s47: Int = CostOf(Const:() => Col[IV])"
shape=box, color=gray, tooltip="s47:Int", style=filled, fillcolor=white
]
"s3494" [
label="s3494: Int = s3492.CostModel.AccessBox()"
shape=box, color=darkblue, tooltip="s3494:Int", style=filled, fillcolor=white
]
"s10112" [
label="s10112: Int = s3492.CostModel.GetRegister()"
shape=box, color=darkblue, tooltip="s10112:Int", style=filled, fillcolor=white
]
"s30859" [
label="s30859: Int = s10112 + s47"
shape=box, color=gray, tooltip="s30859:Int", style=filled, fillcolor=white
]
"s31042" [
label="s31042: Int = s30859 max s30859"
shape=box, color=gray, tooltip="s31042:Int", style=filled, fillcolor=white
]
subgraph cluster_s32466 {
style=dashed; color="#FFCCFF"
"s32464" [
label="s32464: Context"
shape=oval, color=gray, tooltip="s32464:Context", style=filled, fillcolor=white
]
"s32466" [
label="s32466: Context => Int = s32464 => s33448 + s31440"
shape=box, color=magenta, tooltip="s32466:Context => Int", style=filled, fillcolor=white
]
{rank=source; s32464}
"s32485" [
label="s32485: Col[Box] = s32464.Context.INPUTS()"
shape=box, color=darkblue, tooltip="s32485:Col[Box]", style=filled, fillcolor=white
]
"s32487" [
label="s32487: Int = s32485.Col.length()"
shape=box, color=darkblue, tooltip="s32487:Int", style=filled, fillcolor=white
]
"s32531" [
label="s32531: Int = s3494 * s32487"
shape=box, color=gray, tooltip="s32531:Int", style=filled, fillcolor=white
]
"s32532" [
label="s32532: Int = s3508 + s32531"
shape=box, color=gray, tooltip="s32532:Int", style=filled, fillcolor=white
]
"s32533" [
label="s32533: Int = s32532 + s6727"
shape=box, color=gray, tooltip="s32533:Int", style=filled, fillcolor=white
]
"s32535" [
label="s32535: Int = s32533 + s6749"
shape=box, color=gray, tooltip="s32535:Int", style=filled, fillcolor=white
]
"s32542" [
label="s32542: Int = s32535 + s3524"
shape=box, color=gray, tooltip="s32542:Int", style=filled, fillcolor=white
]
"s32551" [
label="s32551: Int = s32542 + s3613"
shape=box, color=gray, tooltip="s32551:Int", style=filled, fillcolor=white
]
"s33080" [
label="s33080: Int = s32551 + s31042"
shape=box, color=gray, tooltip="s33080:Int", style=filled, fillcolor=white
]
"s33082" [
label="s33082: Int = s33080 + s31044"
shape=box, color=gray, tooltip="s33082:Int", style=filled, fillcolor=white
]
"s32592" [
label="s32592: Box = s32485.Col.apply(s768)"
shape=box, color=darkblue, tooltip="s32592:Box", style=filled, fillcolor=white
]
"s32615" [
label="s32615: WOption[Col[Byte]] = s32592.Box.getReg(s10103, ColElem<Col[Byte]>)"
shape=box, color=darkblue, tooltip="s32615:WOption[Col[Byte]]", style=filled, fillcolor=white
]
"s32657" [
label="s32657: Col[Byte] = s32615.WOption.get()"
shape=box, color=darkblue, tooltip="s32657:Col[Byte]", style=filled, fillcolor=white
]
"s33365" [
label="s33365: Int = s32657.Col.length()"
shape=box, color=darkblue, tooltip="s33365:Int", style=filled, fillcolor=white
]
"s32717" [
label="s32717: Box = s32485.Col.apply(s8236)"
shape=box, color=darkblue, tooltip="s32717:Box", style=filled, fillcolor=white
]
"s32740" [
label="s32740: WOption[Col[Byte]] = s32717.Box.getReg(s10103, ColElem<Col[Byte]>)"
shape=box, color=darkblue, tooltip="s32740:WOption[Col[Byte]]", style=filled, fillcolor=white
]
"s32782" [
label="s32782: Col[Byte] = s32740.WOption.get()"
shape=box, color=darkblue, tooltip="s32782:Col[Byte]", style=filled, fillcolor=white
]
"s33367" [
label="s33367: Int = s32782.Col.length()"
shape=box, color=darkblue, tooltip="s33367:Int", style=filled, fillcolor=white
]
"s33368" [
label="s33368: Int = s33365 max s33367"
shape=box, color=gray, tooltip="s33368:Int", style=filled, fillcolor=white
]
"s33403" [
label="s33403: Long = ToLong s33368"
shape=box, color=gray, tooltip="s33403:Long", style=filled, fillcolor=white
]
"s33404" [
label="s33404: Long = s44 * s33403"
shape=box, color=gray, tooltip="s33404:Long", style=filled, fillcolor=white
]
"s33406" [
label="s33406: Long = s33404 / s124"
shape=box, color=gray, tooltip="s33406:Long", style=filled, fillcolor=white
]
"s33407" [
label="s33407: Int = s33406.toInt"
shape=box, color=gray, tooltip="s33407:Int", style=filled, fillcolor=white
]
"s33409" [
label="s33409: Int = s33407 * s8692"
shape=box, color=gray, tooltip="s33409:Int", style=filled, fillcolor=white
]
"s33410" [
label="s33410: Int = s33082 + s33409"
shape=box, color=gray, tooltip="s33410:Int", style=filled, fillcolor=white
]
"s33448" [
label="s33448: Int = s47 + s33410"
shape=box, color=gray, tooltip="s33448:Int", style=filled, fillcolor=white
]
{rank=sink; s32466}
}
"s33486" [
label="s33486: (Context => Boolean, Context => Int) = (s31448, s32466)"
shape=box, color=gray, tooltip="s33486:(Context => Boolean, Context => Int)", style=filled, fillcolor=white
]
"s31522" -> "s31532" [style=solid]
"s6760" -> "s31532" [style=solid]
"s31438" -> "s31440" [style=solid]
"s127" -> "s31440" [style=solid]
"s33407" -> "s33409" [style=solid]
"s8692" -> "s33409" [style=solid]
"s32782" -> "s33367" [style=solid]
"s32532" -> "s32533" [style=solid]
"s6727" -> "s32533" [style=solid]
"s10112" -> "s30859" [style=solid]
"s47" -> "s30859" [style=solid]
"s31467" -> "s31500" [style=solid]
"s11" -> "s31500" [style=solid]
"s31574" -> "s31597" [style=solid]
"s10103" -> "s31597" [style=solid]
"s44" -> "s8759" [style=solid]
"s8758" -> "s8759" [style=solid]
"s32542" -> "s32551" [style=solid]
"s3613" -> "s32551" [style=solid]
"s44" -> "s33404" [style=solid]
"s33403" -> "s33404" [style=solid]
"s31500" -> "s31522" [style=solid]
"s28" -> "s3492" [style=solid]
"s31467" -> "s31574" [style=solid]
"s768" -> "s31574" [style=solid]
"s32592" -> "s32615" [style=solid]
"s10103" -> "s32615" [style=solid]
"s33368" -> "s33403" [style=solid]
"s33080" -> "s33082" [style=solid]
"s31044" -> "s33082" [style=solid]
"s33365" -> "s33368" [style=solid]
"s33367" -> "s33368" [style=solid]
"s32485" -> "s32487" [style=solid]
"s32740" -> "s32782" [style=solid]
"s32615" -> "s32657" [style=solid]
"s47" -> "s33448" [style=solid]
"s33410" -> "s33448" [style=solid]
"s31435" -> "s31437" [style=solid]
"s124" -> "s31437" [style=solid]
"s3508" -> "s32532" [style=solid]
"s32531" -> "s32532" [style=solid]
"s33406" -> "s33407" [style=solid]
"s3492" -> "s3508" [style=solid]
"s30433" -> "s30438" [style=solid]
"s32533" -> "s32535" [style=solid]
"s6749" -> "s32535" [style=solid]
"s31597" -> "s31639" [style=solid]
"s31437" -> "s31438" [style=solid]
"s32485" -> "s32717" [style=solid]
"s8236" -> "s32717" [style=solid]
"s31467" -> "s31699" [style=solid]
"s8236" -> "s31699" [style=solid]
"s32717" -> "s32740" [style=solid]
"s10103" -> "s32740" [style=solid]
"s31639" -> "s31537" [style=solid]
"s31446" -> "s31448" [style=dashed, color=lightgray, weight=0]
"s30433" -> "s31448" [style=solid]
"s32353" -> "s31448" [style=solid]
"s3494" -> "s32531" [style=solid]
"s32487" -> "s32531" [style=solid]
"s3492" -> "s10112" [style=solid]
"s33404" -> "s33406" [style=solid]
"s124" -> "s33406" [style=solid]
"s30438" -> "s31419" [style=solid]
"s31420" -> "s31435" [style=solid]
"s8759" -> "s31435" [style=solid]
"s31722" -> "s31764" [style=solid]
"s32535" -> "s32542" [style=solid]
"s3524" -> "s32542" [style=solid]
"s31446" -> "s31467" [style=solid]
"s32551" -> "s33080" [style=solid]
"s31042" -> "s33080" [style=solid]
"s33082" -> "s33410" [style=solid]
"s33409" -> "s33410" [style=solid]
"s32464" -> "s32485" [style=solid]
"s32657" -> "s33365" [style=solid]
"s31532" -> "s31786" [style=solid]
"s31537" -> "s31786" [style=solid]
"s31662" -> "s31786" [style=solid]
"s31699" -> "s31722" [style=solid]
"s10103" -> "s31722" [style=solid]
"s31448" -> "s33486" [style=solid]
"s32466" -> "s33486" [style=solid]
"s44" -> "s31420" [style=solid]
"s31419" -> "s31420" [style=solid]
"s32485" -> "s32592" [style=solid]
"s768" -> "s32592" [style=solid]
"s8695" -> "s8758" [style=solid]
"s3" -> "s30433" [style=solid]
"s30432" -> "s30433" [style=solid]
"s31764" -> "s31662" [style=solid]
"s3492" -> "s3494" [style=solid]
"s30859" -> "s31042" [style=solid]
"s30859" -> "s31042" [style=solid]
"s32464" -> "s32466" [style=dashed, color=lightgray, weight=0]
"s33448" -> "s32466" [style=solid]
"s31440" -> "s32466" [style=solid]
"s28" -> "s32353" [style=solid]
"s31786" -> "s32353" [style=solid]
}
