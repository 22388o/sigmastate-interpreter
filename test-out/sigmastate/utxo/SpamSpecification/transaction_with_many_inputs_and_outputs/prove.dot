digraph "prove" {
concentrate=true
node [style=filled, fillcolor=orangered]

"s28" [
label="s28: TestSigmaDslBuilder = TestSigmaDslBuilderCtor()"
shape=box, color=green, tooltip="s28:TestSigmaDslBuilder", style=filled, fillcolor=white
]
subgraph cluster_s1174 {
style=dashed; color="#FFCCFF"
"s1172" [
label="s1172: Context"
shape=oval, color=gray, tooltip="s1172:Context", style=filled, fillcolor=white
]
"s1174" [
label="s1174: Context => Boolean = s1172 => s28.SigmaDslBuilder.anyOf(s2293)"
shape=box, color=magenta, tooltip="s1174:Context => Boolean", style=filled, fillcolor=white
]
{rank=source; s1172}
"s1180" [
label="s1180: Col[Box] = s1172.Context.INPUTS()"
shape=box, color=darkblue, tooltip="s1180:Col[Box]", style=filled, fillcolor=white
]
"s1217" [
label="s1217: Col[Box] = s1172.Context.OUTPUTS()"
shape=box, color=darkblue, tooltip="s1217:Col[Box]", style=filled, fillcolor=white
]
subgraph cluster_s1575 {
style=dashed; color="#FFCCFF"
"s1573" [
label="s1573: Box"
shape=oval, color=gray, tooltip="s1573:Box", style=filled, fillcolor=white
]
"s1575" [
label="s1575: Box => Boolean = s1573 => s28.SigmaDslBuilder.anyOf(s1917)"
shape=box, color=magenta, tooltip="s1575:Box => Boolean", style=filled, fillcolor=white
]
{rank=source; s1573}
"s1619" [
label="s1619: Col[Byte] = s1573.Box.propositionBytes()"
shape=box, color=darkblue, tooltip="s1619:Col[Byte]", style=filled, fillcolor=white
]
subgraph cluster_s1717 {
style=dashed; color="#FFCCFF"
"s1715" [
label="s1715: Box"
shape=oval, color=gray, tooltip="s1715:Box", style=filled, fillcolor=white
]
"s1717" [
label="s1717: Box => Boolean = s1715 => s1619 == s1736"
shape=box, color=magenta, tooltip="s1717:Box => Boolean", style=filled, fillcolor=white
]
{rank=source; s1715}
"s1736" [
label="s1736: Col[Byte] = s1715.Box.propositionBytes()"
shape=box, color=darkblue, tooltip="s1736:Col[Byte]", style=filled, fillcolor=white
]
{rank=sink; s1717}
}
"s1917" [
label="s1917: Col[Boolean] = s1217.Col.map(s1717)"
shape=box, color=darkblue, tooltip="s1917:Col[Boolean]", style=filled, fillcolor=white
]
{rank=sink; s1575}
}
"s2293" [
label="s2293: Col[Boolean] = s1180.Col.map(s1575)"
shape=box, color=darkblue, tooltip="s2293:Col[Boolean]", style=filled, fillcolor=white
]
{rank=sink; s1174}
}
"s118" [
label="s118: Long = TypeSize(SByte)"
shape=box, color=gray, tooltip="s118:Long", style=filled, fillcolor=white
]
"s111" [
label="s111: Int = Const(65536)"
shape=box, color=gray, tooltip="s111:Int", style=filled, fillcolor=white
]
"s181" [
label="s181: Long = ToLong s111"
shape=box, color=gray, tooltip="s181:Long", style=filled, fillcolor=white
]
"s182" [
label="s182: Long = s118 * s181"
shape=box, color=gray, tooltip="s182:Long", style=filled, fillcolor=white
]
"s197" [
label="s197: Long = s182 + s182"
shape=box, color=gray, tooltip="s197:Long", style=filled, fillcolor=white
]
"s198" [
label="s198: Long = Const(1024l)"
shape=box, color=gray, tooltip="s198:Long", style=filled, fillcolor=white
]
"s199" [
label="s199: Long = s197 / s198"
shape=box, color=gray, tooltip="s199:Long", style=filled, fillcolor=white
]
"s200" [
label="s200: Int = s199.toInt"
shape=box, color=gray, tooltip="s200:Int", style=filled, fillcolor=white
]
"s201" [
label="s201: Int = CostOf(EQ_per_kb:(T,T) => SBoolean)"
shape=box, color=gray, tooltip="s201:Int", style=filled, fillcolor=white
]
"s202" [
label="s202: Int = s200 * s201"
shape=box, color=gray, tooltip="s202:Int", style=filled, fillcolor=white
]
subgraph cluster_s53 {
style=dashed; color="#FFCCFF"
"s51" [
label="s51: Box"
shape=oval, color=gray, tooltip="s51:Box", style=filled, fillcolor=white
]
"s53" [
label="s53: Box => Long = s51 => s51.Box.dataSize()"
shape=box, color=magenta, tooltip="s53:Box => Long", style=filled, fillcolor=white
]
{rank=source; s51}
{rank=sink; s53}
}
"s43" [
label="s43: CostModel = s28.SigmaDslBuilder.CostModel()"
shape=box, color=darkblue, tooltip="s43:CostModel", style=filled, fillcolor=white
]
"s45" [
label="s45: Int = s43.CostModel.AccessBox()"
shape=box, color=darkblue, tooltip="s45:Int", style=filled, fillcolor=white
]
"s11" [
label="s11: Int = Const(0)"
shape=box, color=gray, tooltip="s11:Int", style=filled, fillcolor=white
]
"s12" [
label="s12: IntPlusMonoid[Int] = IntPlusMonoidCtor(s11)"
shape=box, color=green, tooltip="s12:IntPlusMonoid[Int]", style=filled, fillcolor=white
]
"s3" [
label="s3: ColOverArrayBuilder = ColOverArrayBuilderCtor()"
shape=box, color=green, tooltip="s3:ColOverArrayBuilder", style=filled, fillcolor=white
]
"s114" [
label="s114: Int = CostOf(ExtractScriptBytes:(SBox) => Col[SByte])"
shape=box, color=gray, tooltip="s114:Int", style=filled, fillcolor=white
]
subgraph cluster_s2310 {
style=dashed; color="#FFCCFF"
"s2308" [
label="s2308: Context"
shape=oval, color=gray, tooltip="s2308:Context", style=filled, fillcolor=white
]
"s2310" [
label="s2310: Context => Int = s2308 => s3437.Col.sum(s12)"
shape=box, color=magenta, tooltip="s2310:Context => Int", style=filled, fillcolor=white
]
{rank=source; s2308}
"s2316" [
label="s2316: Col[Box] = s2308.Context.INPUTS()"
shape=box, color=darkblue, tooltip="s2316:Col[Box]", style=filled, fillcolor=white
]
"s2318" [
label="s2318: Int = s2316.Col.length()"
shape=box, color=darkblue, tooltip="s2318:Int", style=filled, fillcolor=white
]
"s2324" [
label="s2324: Col[Int] = s3.ColBuilder.replicate(s2318, s45)"
shape=box, color=darkblue, tooltip="s2324:Col[Int]", style=filled, fillcolor=white
]
"s2332" [
label="s2332: Col[Long] = s2316.Col.map(s53)"
shape=box, color=darkblue, tooltip="s2332:Col[Long]", style=filled, fillcolor=white
]
"s3433" [
label="s3433: Col[(Int, Long)] = s2324.Col.zip(s2332)"
shape=box, color=darkblue, tooltip="s3433:Col[(Int, Long)]", style=filled, fillcolor=white
]
"s3435" [
label="s3435: Col[(Box, (Int, Long))] = s2316.Col.zip(s3433)"
shape=box, color=darkblue, tooltip="s3435:Col[(Box, (Int, Long))]", style=filled, fillcolor=white
]
"s2353" [
label="s2353: Col[Box] = s2308.Context.OUTPUTS()"
shape=box, color=darkblue, tooltip="s2353:Col[Box]", style=filled, fillcolor=white
]
"s2355" [
label="s2355: Int = s2353.Col.length()"
shape=box, color=darkblue, tooltip="s2355:Int", style=filled, fillcolor=white
]
"s2361" [
label="s2361: Col[Int] = s3.ColBuilder.replicate(s2355, s45)"
shape=box, color=darkblue, tooltip="s2361:Col[Int]", style=filled, fillcolor=white
]
"s2369" [
label="s2369: Col[Long] = s2353.Col.map(s53)"
shape=box, color=darkblue, tooltip="s2369:Col[Long]", style=filled, fillcolor=white
]
"s2697" [
label="s2697: Col[(Int, Long)] = s2361.Col.zip(s2369)"
shape=box, color=darkblue, tooltip="s2697:Col[(Int, Long)]", style=filled, fillcolor=white
]
"s2699" [
label="s2699: Col[(Box, (Int, Long))] = s2353.Col.zip(s2697)"
shape=box, color=darkblue, tooltip="s2699:Col[(Box, (Int, Long))]", style=filled, fillcolor=white
]
subgraph cluster_s3070 {
style=dashed; color="#FFCCFF"
"s3068" [
label="s3068: (Box, (Int, Long))"
shape=oval, color=gray, tooltip="s3068:(Box, (Int, Long))", style=filled, fillcolor=white
]
"s3070" [
label="s3070: (Box, (Int, Long)) => Int = s3068 => s3422.Col.sum(s12)"
shape=box, color=magenta, tooltip="s3070:(Box, (Int, Long)) => Int", style=filled, fillcolor=white
]
{rank=source; s3068}
"s3072" [
label="s3072: (Int, Long) = s3068._2"
shape=box, color=gray, tooltip="s3072:(Int, Long)", style=filled, fillcolor=white
]
"s3073" [
label="s3073: Int = s3072._1"
shape=box, color=gray, tooltip="s3073:Int", style=filled, fillcolor=white
]
"s3119" [
label="s3119: Int = s3073 + s114"
shape=box, color=gray, tooltip="s3119:Int", style=filled, fillcolor=white
]
subgraph cluster_s3314 {
style=dashed; color="#FFCCFF"
"s3312" [
label="s3312: (Box, (Int, Long))"
shape=oval, color=gray, tooltip="s3312:(Box, (Int, Long))", style=filled, fillcolor=white
]
"s3314" [
label="s3314: (Box, (Int, Long)) => Int = s3312 => s3375 + s202"
shape=box, color=magenta, tooltip="s3314:(Box, (Int, Long)) => Int", style=filled, fillcolor=white
]
{rank=source; s3312}
"s3316" [
label="s3316: (Int, Long) = s3312._2"
shape=box, color=gray, tooltip="s3316:(Int, Long)", style=filled, fillcolor=white
]
"s3317" [
label="s3317: Int = s3316._1"
shape=box, color=gray, tooltip="s3317:Int", style=filled, fillcolor=white
]
"s3338" [
label="s3338: Int = s3317 + s114"
shape=box, color=gray, tooltip="s3338:Int", style=filled, fillcolor=white
]
"s3375" [
label="s3375: Int = s3119 + s3338"
shape=box, color=gray, tooltip="s3375:Int", style=filled, fillcolor=white
]
{rank=sink; s3314}
}
"s3422" [
label="s3422: Col[Int] = s2699.Col.map(s3314)"
shape=box, color=darkblue, tooltip="s3422:Col[Int]", style=filled, fillcolor=white
]
{rank=sink; s3070}
}
"s3437" [
label="s3437: Col[Int] = s3435.Col.map(s3070)"
shape=box, color=darkblue, tooltip="s3437:Col[Int]", style=filled, fillcolor=white
]
{rank=sink; s2310}
}
"s3443" [
label="s3443: (Context => Boolean, Context => Int) = (s1174, s2310)"
shape=box, color=gray, tooltip="s3443:(Context => Boolean, Context => Int)", style=filled, fillcolor=white
]
"s3068" -> "s3072" [style=solid]
"s3316" -> "s3317" [style=solid]
"s200" -> "s202" [style=solid]
"s201" -> "s202" [style=solid]
"s2308" -> "s2316" [style=solid]
"s3317" -> "s3338" [style=solid]
"s114" -> "s3338" [style=solid]
"s3" -> "s2324" [style=solid]
"s2318" -> "s2324" [style=solid]
"s45" -> "s2324" [style=solid]
"s2316" -> "s3435" [style=solid]
"s3433" -> "s3435" [style=solid]
"s1715" -> "s1736" [style=solid]
"s1172" -> "s1174" [style=dashed, color=lightgray, weight=0]
"s28" -> "s1174" [style=solid]
"s2293" -> "s1174" [style=solid]
"s1172" -> "s1217" [style=solid]
"s1573" -> "s1619" [style=solid]
"s182" -> "s197" [style=solid]
"s182" -> "s197" [style=solid]
"s2316" -> "s2332" [style=solid]
"s53" -> "s2332" [style=solid]
"s3312" -> "s3314" [style=dashed, color=lightgray, weight=0]
"s3375" -> "s3314" [style=solid]
"s202" -> "s3314" [style=solid]
"s51" -> "s53" [style=dashed, color=lightgray, weight=0]
"s51" -> "s53" [style=solid]
"s3073" -> "s3119" [style=solid]
"s114" -> "s3119" [style=solid]
"s2353" -> "s2355" [style=solid]
"s2361" -> "s2697" [style=solid]
"s2369" -> "s2697" [style=solid]
"s2699" -> "s3422" [style=solid]
"s3314" -> "s3422" [style=solid]
"s43" -> "s45" [style=solid]
"s3119" -> "s3375" [style=solid]
"s3338" -> "s3375" [style=solid]
"s3068" -> "s3070" [style=dashed, color=lightgray, weight=0]
"s3422" -> "s3070" [style=solid]
"s12" -> "s3070" [style=solid]
"s11" -> "s12" [style=solid]
"s1180" -> "s2293" [style=solid]
"s1575" -> "s2293" [style=solid]
"s111" -> "s181" [style=solid]
"s3" -> "s2361" [style=solid]
"s2355" -> "s2361" [style=solid]
"s45" -> "s2361" [style=solid]
"s3072" -> "s3073" [style=solid]
"s2353" -> "s2369" [style=solid]
"s53" -> "s2369" [style=solid]
"s2316" -> "s2318" [style=solid]
"s197" -> "s199" [style=solid]
"s198" -> "s199" [style=solid]
"s118" -> "s182" [style=solid]
"s181" -> "s182" [style=solid]
"s1715" -> "s1717" [style=dashed, color=lightgray, weight=0]
"s1619" -> "s1717" [style=solid]
"s1736" -> "s1717" [style=solid]
"s28" -> "s43" [style=solid]
"s2324" -> "s3433" [style=solid]
"s2332" -> "s3433" [style=solid]
"s1172" -> "s1180" [style=solid]
"s2308" -> "s2310" [style=dashed, color=lightgray, weight=0]
"s3437" -> "s2310" [style=solid]
"s12" -> "s2310" [style=solid]
"s1573" -> "s1575" [style=dashed, color=lightgray, weight=0]
"s28" -> "s1575" [style=solid]
"s1917" -> "s1575" [style=solid]
"s2308" -> "s2353" [style=solid]
"s199" -> "s200" [style=solid]
"s2353" -> "s2699" [style=solid]
"s2697" -> "s2699" [style=solid]
"s3435" -> "s3437" [style=solid]
"s3070" -> "s3437" [style=solid]
"s1174" -> "s3443" [style=solid]
"s2310" -> "s3443" [style=solid]
"s1217" -> "s1917" [style=solid]
"s1717" -> "s1917" [style=solid]
"s3312" -> "s3316" [style=solid]
}
